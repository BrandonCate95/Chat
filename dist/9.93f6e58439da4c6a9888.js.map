{"version":3,"file":"9.93f6e58439da4c6a9888.js","sources":["webpack:///./node_modules/@material/list/foundation.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _foundation = require('@material/base/foundation');\n\nvar _foundation2 = _interopRequireDefault(_foundation);\n\nvar _adapter = require('./adapter');\n\nvar _adapter2 = _interopRequireDefault(_adapter);\n\nvar _constants = require('./constants');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @license\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Copyright 2018 Google Inc.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Permission is hereby granted, free of charge, to any person obtaining a copy\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * of this software and associated documentation files (the \"Software\"), to deal\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * in the Software without restriction, including without limitation the rights\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * copies of the Software, and to permit persons to whom the Software is\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * furnished to do so, subject to the following conditions:\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * The above copyright notice and this permission notice shall be included in\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * all copies or substantial portions of the Software.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nnnnnn                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * THE SOFTWARE.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\nvar ELEMENTS_KEY_ALLOWED_IN = ['input', 'button', 'textarea', 'select'];\n\nvar MDCListFoundation = function (_MDCFoundation) {\n  _inherits(MDCListFoundation, _MDCFoundation);\n\n  _createClass(MDCListFoundation, null, [{\n    key: 'strings',\n\n    /** @return enum {string} */\n    get: function get() {\n      return _constants.strings;\n    }\n\n    /** @return enum {string} */\n\n  }, {\n    key: 'cssClasses',\n    get: function get() {\n      return _constants.cssClasses;\n    }\n\n    /**\n     * {@see MDCListAdapter} for typing information on parameters and return\n     * types.\n     * @return {!MDCListAdapter}\n     */\n\n  }, {\n    key: 'defaultAdapter',\n    get: function get() {\n      return (/** @type {!MDCListAdapter} */{\n          getListItemCount: function getListItemCount() {},\n          getFocusedElementIndex: function getFocusedElementIndex() {},\n          setAttributeForElementIndex: function setAttributeForElementIndex() {},\n          removeAttributeForElementIndex: function removeAttributeForElementIndex() {},\n          addClassForElementIndex: function addClassForElementIndex() {},\n          removeClassForElementIndex: function removeClassForElementIndex() {},\n          focusItemAtIndex: function focusItemAtIndex() {},\n          setTabIndexForListItemChildren: function setTabIndexForListItemChildren() {},\n          followHref: function followHref() {},\n          toggleCheckbox: function toggleCheckbox() {}\n        }\n      );\n    }\n\n    /**\n     * @param {!MDCListAdapter=} adapter\n     */\n\n  }]);\n\n  function MDCListFoundation(adapter) {\n    _classCallCheck(this, MDCListFoundation);\n\n    /** {boolean} */\n    var _this = _possibleConstructorReturn(this, (MDCListFoundation.__proto__ || Object.getPrototypeOf(MDCListFoundation)).call(this, Object.assign(MDCListFoundation.defaultAdapter, adapter)));\n\n    _this.wrapFocus_ = false;\n    /** {boolean} */\n    _this.isVertical_ = true;\n    /** {boolean} */\n    _this.isSingleSelectionList_ = false;\n    /** {number} */\n    _this.selectedIndex_ = -1;\n    /** {boolean} */\n    _this.useActivatedClass_ = false;\n    return _this;\n  }\n\n  /**\n   * Sets the private wrapFocus_ variable.\n   * @param {boolean} value\n   */\n\n\n  _createClass(MDCListFoundation, [{\n    key: 'setWrapFocus',\n    value: function setWrapFocus(value) {\n      this.wrapFocus_ = value;\n    }\n\n    /**\n     * Sets the isVertical_ private variable.\n     * @param {boolean} value\n     */\n\n  }, {\n    key: 'setVerticalOrientation',\n    value: function setVerticalOrientation(value) {\n      this.isVertical_ = value;\n    }\n\n    /**\n     * Sets the isSingleSelectionList_ private variable.\n     * @param {boolean} value\n     */\n\n  }, {\n    key: 'setSingleSelection',\n    value: function setSingleSelection(value) {\n      this.isSingleSelectionList_ = value;\n    }\n\n    /**\n     * Sets the useActivatedClass_ private variable.\n     * @param {boolean} useActivated\n     */\n\n  }, {\n    key: 'setUseActivatedClass',\n    value: function setUseActivatedClass(useActivated) {\n      this.useActivatedClass_ = useActivated;\n    }\n\n    /** @param {number} index */\n\n  }, {\n    key: 'setSelectedIndex',\n    value: function setSelectedIndex(index) {\n      if (index === this.selectedIndex_) {\n        return;\n      }\n\n      var className = this.useActivatedClass_ ? _constants.cssClasses.LIST_ITEM_ACTIVATED_CLASS : _constants.cssClasses.LIST_ITEM_SELECTED_CLASS;\n\n      if (this.selectedIndex_ >= 0) {\n        this.adapter_.removeAttributeForElementIndex(this.selectedIndex_, _constants.strings.ARIA_SELECTED);\n        this.adapter_.removeClassForElementIndex(this.selectedIndex_, className);\n        this.adapter_.setAttributeForElementIndex(this.selectedIndex_, 'tabindex', -1);\n      }\n\n      if (index >= 0 && this.adapter_.getListItemCount() > index) {\n        this.selectedIndex_ = index;\n        this.adapter_.setAttributeForElementIndex(this.selectedIndex_, _constants.strings.ARIA_SELECTED, true);\n        this.adapter_.addClassForElementIndex(this.selectedIndex_, className);\n        this.adapter_.setAttributeForElementIndex(this.selectedIndex_, 'tabindex', 0);\n\n        if (this.selectedIndex_ !== 0) {\n          this.adapter_.setAttributeForElementIndex(0, 'tabindex', -1);\n        }\n      }\n    }\n\n    /**\n     * Focus in handler for the list items.\n     * @param evt\n     * @param {number} listItemIndex\n     */\n\n  }, {\n    key: 'handleFocusIn',\n    value: function handleFocusIn(evt, listItemIndex) {\n      if (listItemIndex >= 0) {\n        this.adapter_.setTabIndexForListItemChildren(listItemIndex, 0);\n      }\n    }\n\n    /**\n     * Focus out handler for the list items.\n     * @param {Event} evt\n     * @param {number} listItemIndex\n     */\n\n  }, {\n    key: 'handleFocusOut',\n    value: function handleFocusOut(evt, listItemIndex) {\n      if (listItemIndex >= 0) {\n        this.adapter_.setTabIndexForListItemChildren(listItemIndex, -1);\n      }\n    }\n\n    /**\n     * Key handler for the list.\n     * @param {Event} evt\n     * @param {boolean} isRootListItem\n     * @param {number} listItemIndex\n     */\n\n  }, {\n    key: 'handleKeydown',\n    value: function handleKeydown(evt, isRootListItem, listItemIndex) {\n      var arrowLeft = evt.key === 'ArrowLeft' || evt.keyCode === 37;\n      var arrowUp = evt.key === 'ArrowUp' || evt.keyCode === 38;\n      var arrowRight = evt.key === 'ArrowRight' || evt.keyCode === 39;\n      var arrowDown = evt.key === 'ArrowDown' || evt.keyCode === 40;\n      var isHome = evt.key === 'Home' || evt.keyCode === 36;\n      var isEnd = evt.key === 'End' || evt.keyCode === 35;\n      var isEnter = evt.key === 'Enter' || evt.keyCode === 13;\n      var isSpace = evt.key === 'Space' || evt.keyCode === 32;\n\n      var currentIndex = this.adapter_.getFocusedElementIndex();\n      if (currentIndex === -1) {\n        currentIndex = listItemIndex;\n        if (currentIndex < 0) {\n          // If this event doesn't have a mdc-list-item ancestor from the\n          // current list (not from a sublist), return early.\n          return;\n        }\n      }\n\n      if (this.isVertical_ && arrowDown || !this.isVertical_ && arrowRight) {\n        this.preventDefaultEvent_(evt);\n        this.focusNextElement(currentIndex);\n      } else if (this.isVertical_ && arrowUp || !this.isVertical_ && arrowLeft) {\n        this.preventDefaultEvent_(evt);\n        this.focusPrevElement(currentIndex);\n      } else if (isHome) {\n        this.preventDefaultEvent_(evt);\n        this.focusFirstElement();\n      } else if (isEnd) {\n        this.preventDefaultEvent_(evt);\n        this.focusLastElement();\n      } else if (isEnter || isSpace) {\n        if (isRootListItem) {\n          if (this.isSingleSelectionList_) {\n            // Check if the space key was pressed on the list item or a child element.\n            this.setSelectedIndex(currentIndex);\n            this.preventDefaultEvent_(evt);\n          }\n\n          // Explicitly activate links, since we're preventing default on Enter, and Space doesn't activate them.\n          this.adapter_.followHref(currentIndex);\n        }\n\n        var checkboxFound = this.adapter_.toggleCheckbox(listItemIndex);\n\n        if (checkboxFound) {\n          this.preventDefaultEvent_(evt);\n        }\n      }\n    }\n\n    /**\n     * Click handler for the list.\n     * @param {number} index\n     * @param {boolean} toggleCheckbox\n     */\n\n  }, {\n    key: 'handleClick',\n    value: function handleClick(index, toggleCheckbox) {\n      if (index === -1) return;\n\n      if (toggleCheckbox) {\n        this.adapter_.toggleCheckbox(index);\n      }\n\n      if (this.isSingleSelectionList_) {\n        this.setSelectedIndex(index);\n      }\n    }\n\n    /**\n     * Ensures that preventDefault is only called if the containing element doesn't\n     * consume the event, and it will cause an unintended scroll.\n     * @param {Event} evt\n     * @private\n     */\n\n  }, {\n    key: 'preventDefaultEvent_',\n    value: function preventDefaultEvent_(evt) {\n      var tagName = ('' + evt.target.tagName).toLowerCase();\n      if (ELEMENTS_KEY_ALLOWED_IN.indexOf(tagName) === -1) {\n        evt.preventDefault();\n      }\n    }\n\n    /**\n     * Focuses the next element on the list.\n     * @param {number} index\n     */\n\n  }, {\n    key: 'focusNextElement',\n    value: function focusNextElement(index) {\n      var count = this.adapter_.getListItemCount();\n      var nextIndex = index + 1;\n      if (nextIndex >= count) {\n        if (this.wrapFocus_) {\n          nextIndex = 0;\n        } else {\n          // Return early because last item is already focused.\n          return;\n        }\n      }\n      this.adapter_.focusItemAtIndex(nextIndex);\n    }\n\n    /**\n     * Focuses the previous element on the list.\n     * @param {number} index\n     */\n\n  }, {\n    key: 'focusPrevElement',\n    value: function focusPrevElement(index) {\n      var prevIndex = index - 1;\n      if (prevIndex < 0) {\n        if (this.wrapFocus_) {\n          prevIndex = this.adapter_.getListItemCount() - 1;\n        } else {\n          // Return early because first item is already focused.\n          return;\n        }\n      }\n      this.adapter_.focusItemAtIndex(prevIndex);\n    }\n  }, {\n    key: 'focusFirstElement',\n    value: function focusFirstElement() {\n      if (this.adapter_.getListItemCount() > 0) {\n        this.adapter_.focusItemAtIndex(0);\n      }\n    }\n  }, {\n    key: 'focusLastElement',\n    value: function focusLastElement() {\n      var lastIndex = this.adapter_.getListItemCount() - 1;\n      if (lastIndex >= 0) {\n        this.adapter_.focusItemAtIndex(lastIndex);\n      }\n    }\n  }]);\n\n  return MDCListFoundation;\n}(_foundation2.default);\n\nexports.default = MDCListFoundation;"],"mappings":"AAEA","sourceRoot":""}