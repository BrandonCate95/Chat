{"version":3,"file":"20.cba18f1e75aaf324739d.js","sources":["webpack:///./src/mdc/TextArea.js"],"sourcesContent":["import React from 'react'\r\nimport './TextArea.scss'\r\nimport Loadable from 'react-loadable'\r\nimport Loading from '../components/Loading'\r\nimport {MDCTextField} from '@material/textfield'\r\n\r\nconst LoadableCreateMessageButton = Loadable({\r\n    loader: () => import('../components/CreateMessageBtn'),\r\n    loading: Loading,\r\n})\r\n\r\nconst style = {\r\n    width: \"100%\",\r\n    resize: \"none\",\r\n    border: \"none\",\r\n    outline: \"none\",\r\n    padding: \"32px 55px 16px 23px\",\r\n    margin: \"0\"\r\n}\r\n\r\nclass TextArea extends React.Component {\r\n\r\n    state = {\r\n        focused: false\r\n    }\r\n\r\n    textareaRipple = null\r\n    textareaContainerRef = null\r\n    textareaRef = null\r\n    labelRef = null\r\n    \r\n    OnInput() {\r\n        this.style.height = 'auto'\r\n        this.style.height = (this.scrollHeight) + 'px'\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        if(!this.props.icon){\r\n            this.textareaRipple = new MDCTextField(this.textareaContainerRef)\r\n        }\r\n        const textarea = this.textareaRef\r\n        textarea.style.height = textarea.scrollHeight\r\n        textarea.style.overflowY = \"hidden\"\r\n        textarea.addEventListener(\"input\", this.OnInput, false)\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        if(!this.props.icon){\r\n            this.textareaRipple.destroy()\r\n        }\r\n    }\r\n\r\n    restoreLabel = () => {\r\n        this.labelRef.classList.remove('mdc-floating-label--float-above')\r\n    }\r\n\r\n    render(){\r\n        const {content, handleChange, user, clearMessage} = this.props\r\n        return(\r\n            <div>\r\n                <div \r\n                    ref={ textarea => this.textareaContainerRef = textarea }\r\n                    className=\"mdc-text-field mdc-text-field--textarea\"\r\n                    style={{display: 'flex', display: 'flex', margin: '8px 0', position: 'relative', bottom: '0', width: '100%', backgroundColor: 'white', boxShadow: '0 1px 3px 1px grey'}}\r\n                >\r\n                    <textarea \r\n                        id=\"textarea\" \r\n                        ref={ textarea => this.textareaRef = textarea }\r\n                        className=\"mdc-text-field__input\" \r\n                        rows=\"1\"\r\n                        style={style}\r\n                        onChange={handleChange}\r\n                        onFocus={() => this.setState({focused: true})}\r\n                        onBlur={() => this.setState({focused: false})}\r\n                        value={content}\r\n                    ></textarea>\r\n                    <LoadableCreateMessageButton \r\n                        message={content}\r\n                        user={user}\r\n                        clearMessage={clearMessage}\r\n                        restoreLabel={this.restoreLabel.bind(this)}\r\n                    />\r\n                    <label \r\n                        ref={ label => this.labelRef = label }\r\n                        htmlFor=\"textarea\" \r\n                        className=\"mdc-floating-label\" \r\n                        style={{background: 'none'}}\r\n                    >\r\n                        {this.state.focused &&\r\n                            user\r\n                        }\r\n                        {!this.state.focused && \r\n                            'Write...'\r\n                        }\r\n                    </label>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TextArea"],"mappings":"AAAA","sourceRoot":""}