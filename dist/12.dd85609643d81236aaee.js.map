{"version":3,"file":"12.dd85609643d81236aaee.js","sources":["webpack:///./node_modules/@material/textfield/foundation.js","webpack:///./node_modules/@material/floating-label/adapter.js","webpack:///./node_modules/@material/textfield/index.js","webpack:///./node_modules/@material/notched-outline/adapter.js","webpack:///./node_modules/@material/textfield/adapter.js","webpack:///./node_modules/@material/notched-outline/index.js","webpack:///./node_modules/@material/textfield/icon/foundation.js","webpack:///./node_modules/@material/floating-label/index.js","webpack:///./node_modules/@material/textfield/helper-text/index.js","webpack:///./node_modules/@material/line-ripple/index.js","webpack:///./node_modules/@material/textfield/icon/adapter.js","webpack:///./node_modules/@material/floating-label/foundation.js","webpack:///./node_modules/@material/notched-outline/foundation.js","webpack:///./node_modules/@material/line-ripple/adapter.js","webpack:///./node_modules/@material/textfield/helper-text/foundation.js","webpack:///./node_modules/@material/textfield/icon/index.js","webpack:///./node_modules/@material/line-ripple/foundation.js","webpack:///./node_modules/@material/textfield/helper-text/adapter.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _foundation = require('@material/base/foundation');\n\nvar _foundation2 = _interopRequireDefault(_foundation);\n\nvar _foundation3 = require('./helper-text/foundation');\n\nvar _foundation4 = _interopRequireDefault(_foundation3);\n\nvar _foundation5 = require('./icon/foundation');\n\nvar _foundation6 = _interopRequireDefault(_foundation5);\n\nvar _adapter = require('./adapter');\n\nvar _constants = require('./constants');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @license\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Copyright 2016 Google Inc. All Rights Reserved.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Licensed under the Apache License, Version 2.0 (the \"License\");\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * you may not use this file except in compliance with the License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * You may obtain a copy of the License at\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\nhttp://www.apache.org/licenses/LICENSE-2.0\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Unless required by applicable law or agreed to in writing, software\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * distributed under the License is distributed on an \"AS IS\" BASIS,\neither express or implied.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * See the License for the specific language governing permissions and\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * limitations under the License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n/* eslint-disable no-unused-vars */\n\n/* eslint-enable no-unused-vars */\n\n\n/**\n * @extends {MDCFoundation<!MDCTextFieldAdapter>}\n * @final\n */\nvar MDCTextFieldFoundation = function (_MDCFoundation) {\n  _inherits(MDCTextFieldFoundation, _MDCFoundation);\n\n  _createClass(MDCTextFieldFoundation, [{\n    key: 'shouldShake',\n\n\n    /** @return {boolean} */\n    get: function get() {\n      return !this.isValid() && !this.isFocused_;\n    }\n\n    /** @return {boolean} */\n\n  }, {\n    key: 'shouldFloat',\n    get: function get() {\n      return this.isFocused_ || !!this.getValue() || this.isBadInput_();\n    }\n\n    /**\n     * {@see MDCTextFieldAdapter} for typing information on parameters and return\n     * types.\n     * @return {!MDCTextFieldAdapter}\n     */\n\n  }], [{\n    key: 'cssClasses',\n\n    /** @return enum {string} */\n    get: function get() {\n      return _constants.cssClasses;\n    }\n\n    /** @return enum {string} */\n\n  }, {\n    key: 'strings',\n    get: function get() {\n      return _constants.strings;\n    }\n\n    /** @return enum {string} */\n\n  }, {\n    key: 'numbers',\n    get: function get() {\n      return _constants.numbers;\n    }\n  }, {\n    key: 'defaultAdapter',\n    get: function get() {\n      return (/** @type {!MDCTextFieldAdapter} */{\n          addClass: function addClass() {},\n          removeClass: function removeClass() {},\n          hasClass: function hasClass() {},\n          registerTextFieldInteractionHandler: function registerTextFieldInteractionHandler() {},\n          deregisterTextFieldInteractionHandler: function deregisterTextFieldInteractionHandler() {},\n          registerInputInteractionHandler: function registerInputInteractionHandler() {},\n          deregisterInputInteractionHandler: function deregisterInputInteractionHandler() {},\n          registerValidationAttributeChangeHandler: function registerValidationAttributeChangeHandler() {},\n          deregisterValidationAttributeChangeHandler: function deregisterValidationAttributeChangeHandler() {},\n          getNativeInput: function getNativeInput() {},\n          isFocused: function isFocused() {},\n          isRtl: function isRtl() {},\n          activateLineRipple: function activateLineRipple() {},\n          deactivateLineRipple: function deactivateLineRipple() {},\n          setLineRippleTransformOrigin: function setLineRippleTransformOrigin() {},\n          shakeLabel: function shakeLabel() {},\n          floatLabel: function floatLabel() {},\n          hasLabel: function hasLabel() {},\n          getLabelWidth: function getLabelWidth() {},\n          hasOutline: function hasOutline() {},\n          notchOutline: function notchOutline() {},\n          closeOutline: function closeOutline() {}\n        }\n      );\n    }\n\n    /**\n     * @param {!MDCTextFieldAdapter} adapter\n     * @param {!FoundationMapType=} foundationMap Map from subcomponent names to their subfoundations.\n     */\n\n  }]);\n\n  function MDCTextFieldFoundation(adapter) {\n    var foundationMap = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : /** @type {!FoundationMapType} */{};\n\n    _classCallCheck(this, MDCTextFieldFoundation);\n\n    /** @type {!MDCTextFieldHelperTextFoundation|undefined} */\n    var _this = _possibleConstructorReturn(this, (MDCTextFieldFoundation.__proto__ || Object.getPrototypeOf(MDCTextFieldFoundation)).call(this, Object.assign(MDCTextFieldFoundation.defaultAdapter, adapter)));\n\n    _this.helperText_ = foundationMap.helperText;\n    /** @type {!MDCTextFieldIconFoundation|undefined} */\n    _this.icon_ = foundationMap.icon;\n\n    /** @private {boolean} */\n    _this.isFocused_ = false;\n    /** @private {boolean} */\n    _this.receivedUserInput_ = false;\n    /** @private {boolean} */\n    _this.useCustomValidityChecking_ = false;\n    /** @private {boolean} */\n    _this.isValid_ = true;\n    /** @private {function(): undefined} */\n    _this.inputFocusHandler_ = function () {\n      return _this.activateFocus();\n    };\n    /** @private {function(): undefined} */\n    _this.inputBlurHandler_ = function () {\n      return _this.deactivateFocus();\n    };\n    /** @private {function(): undefined} */\n    _this.inputInputHandler_ = function () {\n      return _this.autoCompleteFocus();\n    };\n    /** @private {function(!Event): undefined} */\n    _this.setPointerXOffset_ = function (evt) {\n      return _this.setTransformOrigin(evt);\n    };\n    /** @private {function(!Event): undefined} */\n    _this.textFieldInteractionHandler_ = function () {\n      return _this.handleTextFieldInteraction();\n    };\n    /** @private {function(!Array): undefined} */\n    _this.validationAttributeChangeHandler_ = function (attributesList) {\n      return _this.handleValidationAttributeChange(attributesList);\n    };\n\n    /** @private {!MutationObserver} */\n    _this.validationObserver_;\n    return _this;\n  }\n\n  _createClass(MDCTextFieldFoundation, [{\n    key: 'init',\n    value: function init() {\n      var _this2 = this;\n\n      this.adapter_.addClass(MDCTextFieldFoundation.cssClasses.UPGRADED);\n      // Ensure label does not collide with any pre-filled value.\n      if (this.adapter_.hasLabel() && (this.getValue() || this.isBadInput_())) {\n        this.adapter_.floatLabel(this.shouldFloat);\n        this.notchOutline(this.shouldFloat);\n      }\n\n      if (this.adapter_.isFocused()) {\n        this.inputFocusHandler_();\n      }\n\n      this.adapter_.registerInputInteractionHandler('focus', this.inputFocusHandler_);\n      this.adapter_.registerInputInteractionHandler('blur', this.inputBlurHandler_);\n      this.adapter_.registerInputInteractionHandler('input', this.inputInputHandler_);\n      ['mousedown', 'touchstart'].forEach(function (evtType) {\n        _this2.adapter_.registerInputInteractionHandler(evtType, _this2.setPointerXOffset_);\n      });\n      ['click', 'keydown'].forEach(function (evtType) {\n        _this2.adapter_.registerTextFieldInteractionHandler(evtType, _this2.textFieldInteractionHandler_);\n      });\n      this.validationObserver_ = this.adapter_.registerValidationAttributeChangeHandler(this.validationAttributeChangeHandler_);\n    }\n  }, {\n    key: 'destroy',\n    value: function destroy() {\n      var _this3 = this;\n\n      this.adapter_.removeClass(MDCTextFieldFoundation.cssClasses.UPGRADED);\n      this.adapter_.deregisterInputInteractionHandler('focus', this.inputFocusHandler_);\n      this.adapter_.deregisterInputInteractionHandler('blur', this.inputBlurHandler_);\n      this.adapter_.deregisterInputInteractionHandler('input', this.inputInputHandler_);\n      ['mousedown', 'touchstart'].forEach(function (evtType) {\n        _this3.adapter_.deregisterInputInteractionHandler(evtType, _this3.setPointerXOffset_);\n      });\n      ['click', 'keydown'].forEach(function (evtType) {\n        _this3.adapter_.deregisterTextFieldInteractionHandler(evtType, _this3.textFieldInteractionHandler_);\n      });\n      this.adapter_.deregisterValidationAttributeChangeHandler(this.validationObserver_);\n    }\n\n    /**\n     * Handles user interactions with the Text Field.\n     */\n\n  }, {\n    key: 'handleTextFieldInteraction',\n    value: function handleTextFieldInteraction() {\n      if (this.adapter_.getNativeInput().disabled) {\n        return;\n      }\n      this.receivedUserInput_ = true;\n    }\n\n    /**\n     * Handles validation attribute changes\n     * @param {!Array<string>} attributesList\n     */\n\n  }, {\n    key: 'handleValidationAttributeChange',\n    value: function handleValidationAttributeChange(attributesList) {\n      var _this4 = this;\n\n      attributesList.some(function (attributeName) {\n        if (_constants.VALIDATION_ATTR_WHITELIST.indexOf(attributeName) > -1) {\n          _this4.styleValidity_(true);\n          return true;\n        }\n      });\n    }\n\n    /**\n     * Opens/closes the notched outline.\n     * @param {boolean} openNotch\n     */\n\n  }, {\n    key: 'notchOutline',\n    value: function notchOutline(openNotch) {\n      if (!this.adapter_.hasOutline() || !this.adapter_.hasLabel()) {\n        return;\n      }\n\n      if (openNotch) {\n        var isDense = this.adapter_.hasClass(_constants.cssClasses.DENSE);\n        var labelScale = isDense ? _constants.numbers.DENSE_LABEL_SCALE : _constants.numbers.LABEL_SCALE;\n        var labelWidth = this.adapter_.getLabelWidth() * labelScale;\n        var isRtl = this.adapter_.isRtl();\n        this.adapter_.notchOutline(labelWidth, isRtl);\n      } else {\n        this.adapter_.closeOutline();\n      }\n    }\n\n    /**\n     * Activates the text field focus state.\n     */\n\n  }, {\n    key: 'activateFocus',\n    value: function activateFocus() {\n      this.isFocused_ = true;\n      this.styleFocused_(this.isFocused_);\n      this.adapter_.activateLineRipple();\n      this.notchOutline(this.shouldFloat);\n      if (this.adapter_.hasLabel()) {\n        this.adapter_.shakeLabel(this.shouldShake);\n        this.adapter_.floatLabel(this.shouldFloat);\n      }\n      if (this.helperText_) {\n        this.helperText_.showToScreenReader();\n      }\n    }\n\n    /**\n     * Sets the line ripple's transform origin, so that the line ripple activate\n     * animation will animate out from the user's click location.\n     * @param {!Event} evt\n     */\n\n  }, {\n    key: 'setTransformOrigin',\n    value: function setTransformOrigin(evt) {\n      var targetClientRect = evt.target.getBoundingClientRect();\n      var evtCoords = { x: evt.clientX, y: evt.clientY };\n      var normalizedX = evtCoords.x - targetClientRect.left;\n      this.adapter_.setLineRippleTransformOrigin(normalizedX);\n    }\n\n    /**\n     * Activates the Text Field's focus state in cases when the input value\n     * changes without user input (e.g. programatically).\n     */\n\n  }, {\n    key: 'autoCompleteFocus',\n    value: function autoCompleteFocus() {\n      if (!this.receivedUserInput_) {\n        this.activateFocus();\n      }\n    }\n\n    /**\n     * Deactivates the Text Field's focus state.\n     */\n\n  }, {\n    key: 'deactivateFocus',\n    value: function deactivateFocus() {\n      this.isFocused_ = false;\n      this.adapter_.deactivateLineRipple();\n      var input = this.getNativeInput_();\n      var shouldRemoveLabelFloat = !input.value && !this.isBadInput_();\n      var isValid = this.isValid();\n      this.styleValidity_(isValid);\n      this.styleFocused_(this.isFocused_);\n      if (this.adapter_.hasLabel()) {\n        this.adapter_.shakeLabel(this.shouldShake);\n        this.adapter_.floatLabel(this.shouldFloat);\n        this.notchOutline(this.shouldFloat);\n      }\n      if (shouldRemoveLabelFloat) {\n        this.receivedUserInput_ = false;\n      }\n    }\n\n    /**\n     * @return {string} The value of the input Element.\n     */\n\n  }, {\n    key: 'getValue',\n    value: function getValue() {\n      return this.getNativeInput_().value;\n    }\n\n    /**\n     * @param {string} value The value to set on the input Element.\n     */\n\n  }, {\n    key: 'setValue',\n    value: function setValue(value) {\n      this.getNativeInput_().value = value;\n      var isValid = this.isValid();\n      this.styleValidity_(isValid);\n      if (this.adapter_.hasLabel()) {\n        this.adapter_.shakeLabel(this.shouldShake);\n        this.adapter_.floatLabel(this.shouldFloat);\n        this.notchOutline(this.shouldFloat);\n      }\n    }\n\n    /**\n     * @return {boolean} If a custom validity is set, returns that value.\n     *     Otherwise, returns the result of native validity checks.\n     */\n\n  }, {\n    key: 'isValid',\n    value: function isValid() {\n      return this.useCustomValidityChecking_ ? this.isValid_ : this.isNativeInputValid_();\n    }\n\n    /**\n     * @param {boolean} isValid Sets the validity state of the Text Field.\n     */\n\n  }, {\n    key: 'setValid',\n    value: function setValid(isValid) {\n      this.useCustomValidityChecking_ = true;\n      this.isValid_ = isValid;\n      // Retrieve from the getter to ensure correct logic is applied.\n      isValid = this.isValid();\n      this.styleValidity_(isValid);\n      if (this.adapter_.hasLabel()) {\n        this.adapter_.shakeLabel(this.shouldShake);\n      }\n    }\n\n    /**\n     * @return {boolean} True if the Text Field is disabled.\n     */\n\n  }, {\n    key: 'isDisabled',\n    value: function isDisabled() {\n      return this.getNativeInput_().disabled;\n    }\n\n    /**\n     * @param {boolean} disabled Sets the text-field disabled or enabled.\n     */\n\n  }, {\n    key: 'setDisabled',\n    value: function setDisabled(disabled) {\n      this.getNativeInput_().disabled = disabled;\n      this.styleDisabled_(disabled);\n    }\n\n    /**\n     * @param {string} content Sets the content of the helper text.\n     */\n\n  }, {\n    key: 'setHelperTextContent',\n    value: function setHelperTextContent(content) {\n      if (this.helperText_) {\n        this.helperText_.setContent(content);\n      }\n    }\n\n    /**\n     * Sets the aria label of the icon.\n     * @param {string} label\n     */\n\n  }, {\n    key: 'setIconAriaLabel',\n    value: function setIconAriaLabel(label) {\n      if (this.icon_) {\n        this.icon_.setAriaLabel(label);\n      }\n    }\n\n    /**\n     * Sets the text content of the icon.\n     * @param {string} content\n     */\n\n  }, {\n    key: 'setIconContent',\n    value: function setIconContent(content) {\n      if (this.icon_) {\n        this.icon_.setContent(content);\n      }\n    }\n\n    /**\n     * @return {boolean} True if the Text Field input fails in converting the\n     *     user-supplied value.\n     * @private\n     */\n\n  }, {\n    key: 'isBadInput_',\n    value: function isBadInput_() {\n      return this.getNativeInput_().validity.badInput;\n    }\n\n    /**\n     * @return {boolean} The result of native validity checking\n     *     (ValidityState.valid).\n     */\n\n  }, {\n    key: 'isNativeInputValid_',\n    value: function isNativeInputValid_() {\n      return this.getNativeInput_().validity.valid;\n    }\n\n    /**\n     * Styles the component based on the validity state.\n     * @param {boolean} isValid\n     * @private\n     */\n\n  }, {\n    key: 'styleValidity_',\n    value: function styleValidity_(isValid) {\n      var INVALID = MDCTextFieldFoundation.cssClasses.INVALID;\n\n      if (isValid) {\n        this.adapter_.removeClass(INVALID);\n      } else {\n        this.adapter_.addClass(INVALID);\n      }\n      if (this.helperText_) {\n        this.helperText_.setValidity(isValid);\n      }\n    }\n\n    /**\n     * Styles the component based on the focused state.\n     * @param {boolean} isFocused\n     * @private\n     */\n\n  }, {\n    key: 'styleFocused_',\n    value: function styleFocused_(isFocused) {\n      var FOCUSED = MDCTextFieldFoundation.cssClasses.FOCUSED;\n\n      if (isFocused) {\n        this.adapter_.addClass(FOCUSED);\n      } else {\n        this.adapter_.removeClass(FOCUSED);\n      }\n    }\n\n    /**\n     * Styles the component based on the disabled state.\n     * @param {boolean} isDisabled\n     * @private\n     */\n\n  }, {\n    key: 'styleDisabled_',\n    value: function styleDisabled_(isDisabled) {\n      var _MDCTextFieldFoundati = MDCTextFieldFoundation.cssClasses,\n          DISABLED = _MDCTextFieldFoundati.DISABLED,\n          INVALID = _MDCTextFieldFoundati.INVALID;\n\n      if (isDisabled) {\n        this.adapter_.addClass(DISABLED);\n        this.adapter_.removeClass(INVALID);\n      } else {\n        this.adapter_.removeClass(DISABLED);\n      }\n      if (this.icon_) {\n        this.icon_.setDisabled(isDisabled);\n      }\n    }\n\n    /**\n     * @return {!Element|!NativeInputType} The native text input from the\n     * host environment, or a dummy if none exists.\n     * @private\n     */\n\n  }, {\n    key: 'getNativeInput_',\n    value: function getNativeInput_() {\n      return this.adapter_.getNativeInput() ||\n      /** @type {!NativeInputType} */{\n        value: '',\n        disabled: false,\n        validity: {\n          badInput: false,\n          valid: true\n        }\n      };\n    }\n  }]);\n\n  return MDCTextFieldFoundation;\n}(_foundation2.default);\n\nexports.default = MDCTextFieldFoundation;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * Adapter for MDC Floating Label.\n *\n * Defines the shape of the adapter expected by the foundation. Implement this\n * adapter to integrate the floating label into your framework. See\n * https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md\n * for more information.\n *\n * @record\n */\nvar MDCFloatingLabelAdapter = function () {\n  function MDCFloatingLabelAdapter() {\n    _classCallCheck(this, MDCFloatingLabelAdapter);\n  }\n\n  _createClass(MDCFloatingLabelAdapter, [{\n    key: \"addClass\",\n\n    /**\n     * Adds a class to the label element.\n     * @param {string} className\n     */\n    value: function addClass(className) {}\n\n    /**\n     * Removes a class from the label element.\n     * @param {string} className\n     */\n\n  }, {\n    key: \"removeClass\",\n    value: function removeClass(className) {}\n\n    /**\n     * Returns the width of the label element.\n     * @return {number}\n     */\n\n  }, {\n    key: \"getWidth\",\n    value: function getWidth() {}\n\n    /**\n     * Registers an event listener on the root element for a given event.\n     * @param {string} evtType\n     * @param {function(!Event): undefined} handler\n     */\n\n  }, {\n    key: \"registerInteractionHandler\",\n    value: function registerInteractionHandler(evtType, handler) {}\n\n    /**\n     * Deregisters an event listener on the root element for a given event.\n     * @param {string} evtType\n     * @param {function(!Event): undefined} handler\n     */\n\n  }, {\n    key: \"deregisterInteractionHandler\",\n    value: function deregisterInteractionHandler(evtType, handler) {}\n  }]);\n\n  return MDCFloatingLabelAdapter;\n}();\n\nexports.default = MDCFloatingLabelAdapter;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MDCTextFieldIconFoundation = exports.MDCTextFieldIcon = exports.MDCTextFieldHelperTextFoundation = exports.MDCTextFieldHelperText = exports.MDCTextFieldFoundation = exports.MDCTextField = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _component = require('@material/base/component');\n\nvar _component2 = _interopRequireDefault(_component);\n\nvar _index = require('@material/ripple/index');\n\nvar _util = require('@material/ripple/util');\n\nvar _constants = require('./constants');\n\nvar _adapter = require('./adapter');\n\nvar _foundation = require('./foundation');\n\nvar _foundation2 = _interopRequireDefault(_foundation);\n\nvar _index2 = require('@material/line-ripple/index');\n\nvar _index3 = require('./helper-text/index');\n\nvar _index4 = require('./icon/index');\n\nvar _index5 = require('@material/floating-label/index');\n\nvar _index6 = require('@material/notched-outline/index');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @license\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Copyright 2016 Google Inc. All Rights Reserved.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Licensed under the Apache License, Version 2.0 (the \"License\");\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * you may not use this file except in compliance with the License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * You may obtain a copy of the License at\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\nhttp://www.apache.org/licenses/LICENSE-2.0\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Unless required by applicable law or agreed to in writing, software\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * distributed under the License is distributed on an \"AS IS\" BASIS,\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * See the License for the specific language governing permissions and\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * limitations under the License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n/* eslint-disable no-unused-vars */\n\n/* eslint-enable no-unused-vars */\n\n/* eslint-disable no-unused-vars */\n\n\n/* eslint-enable no-unused-vars */\n\n/**\n * @extends {MDCComponent<!MDCTextFieldFoundation>}\n * @final\n */\nvar MDCTextField = function (_MDCComponent) {\n  _inherits(MDCTextField, _MDCComponent);\n\n  /**\n   * @param {...?} args\n   */\n  function MDCTextField() {\n    var _ref;\n\n    _classCallCheck(this, MDCTextField);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    /** @private {?Element} */\n    var _this = _possibleConstructorReturn(this, (_ref = MDCTextField.__proto__ || Object.getPrototypeOf(MDCTextField)).call.apply(_ref, [this].concat(args)));\n\n    _this.input_;\n    /** @type {?MDCRipple} */\n    _this.ripple;\n    /** @private {?MDCLineRipple} */\n    _this.lineRipple_;\n    /** @private {?MDCTextFieldHelperText} */\n    _this.helperText_;\n    /** @private {?MDCTextFieldIcon} */\n    _this.icon_;\n    /** @private {?MDCFloatingLabel} */\n    _this.label_;\n    /** @private {?MDCNotchedOutline} */\n    _this.outline_;\n    return _this;\n  }\n\n  /**\n   * @param {!Element} root\n   * @return {!MDCTextField}\n   */\n\n\n  _createClass(MDCTextField, [{\n    key: 'initialize',\n\n\n    /**\n     * @param {(function(!Element): !MDCRipple)=} rippleFactory A function which\n     * creates a new MDCRipple.\n     * @param {(function(!Element): !MDCLineRipple)=} lineRippleFactory A function which\n     * creates a new MDCLineRipple.\n     * @param {(function(!Element): !MDCTextFieldHelperText)=} helperTextFactory A function which\n     * creates a new MDCTextFieldHelperText.\n     * @param {(function(!Element): !MDCTextFieldIcon)=} iconFactory A function which\n     * creates a new MDCTextFieldIcon.\n     * @param {(function(!Element): !MDCFloatingLabel)=} labelFactory A function which\n     * creates a new MDCFloatingLabel.\n     * @param {(function(!Element): !MDCNotchedOutline)=} outlineFactory A function which\n     * creates a new MDCNotchedOutline.\n     */\n    value: function initialize() {\n      var rippleFactory = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : function (el, foundation) {\n        return new _index.MDCRipple(el, foundation);\n      };\n      var lineRippleFactory = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function (el) {\n        return new _index2.MDCLineRipple(el);\n      };\n      var helperTextFactory = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function (el) {\n        return new _index3.MDCTextFieldHelperText(el);\n      };\n      var iconFactory = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : function (el) {\n        return new _index4.MDCTextFieldIcon(el);\n      };\n\n      var _this2 = this;\n\n      var labelFactory = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : function (el) {\n        return new _index5.MDCFloatingLabel(el);\n      };\n      var outlineFactory = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : function (el) {\n        return new _index6.MDCNotchedOutline(el);\n      };\n\n      this.input_ = this.root_.querySelector(_constants.strings.INPUT_SELECTOR);\n      var labelElement = this.root_.querySelector(_constants.strings.LABEL_SELECTOR);\n      if (labelElement) {\n        this.label_ = labelFactory(labelElement);\n      }\n      var lineRippleElement = this.root_.querySelector(_constants.strings.LINE_RIPPLE_SELECTOR);\n      if (lineRippleElement) {\n        this.lineRipple_ = lineRippleFactory(lineRippleElement);\n      }\n      var outlineElement = this.root_.querySelector(_constants.strings.OUTLINE_SELECTOR);\n      if (outlineElement) {\n        this.outline_ = outlineFactory(outlineElement);\n      }\n      if (this.input_.hasAttribute(_constants.strings.ARIA_CONTROLS)) {\n        var helperTextElement = document.getElementById(this.input_.getAttribute(_constants.strings.ARIA_CONTROLS));\n        if (helperTextElement) {\n          this.helperText_ = helperTextFactory(helperTextElement);\n        }\n      }\n      var iconElement = this.root_.querySelector(_constants.strings.ICON_SELECTOR);\n      if (iconElement) {\n        this.icon_ = iconFactory(iconElement);\n      }\n\n      this.ripple = null;\n      if (this.root_.classList.contains(_constants.cssClasses.BOX)) {\n        var MATCHES = (0, _util.getMatchesProperty)(HTMLElement.prototype);\n        var adapter = Object.assign(_index.MDCRipple.createAdapter( /** @type {!RippleCapableSurface} */this), {\n          isSurfaceActive: function isSurfaceActive() {\n            return _this2.input_[MATCHES](':active');\n          },\n          registerInteractionHandler: function registerInteractionHandler(type, handler) {\n            return _this2.input_.addEventListener(type, handler);\n          },\n          deregisterInteractionHandler: function deregisterInteractionHandler(type, handler) {\n            return _this2.input_.removeEventListener(type, handler);\n          }\n        });\n        var foundation = new _index.MDCRippleFoundation(adapter);\n        this.ripple = rippleFactory(this.root_, foundation);\n      }\n    }\n  }, {\n    key: 'destroy',\n    value: function destroy() {\n      if (this.ripple) {\n        this.ripple.destroy();\n      }\n      if (this.lineRipple_) {\n        this.lineRipple_.destroy();\n      }\n      if (this.helperText_) {\n        this.helperText_.destroy();\n      }\n      if (this.icon_) {\n        this.icon_.destroy();\n      }\n      if (this.label_) {\n        this.label_.destroy();\n      }\n      if (this.outline_) {\n        this.outline_.destroy();\n      }\n      _get(MDCTextField.prototype.__proto__ || Object.getPrototypeOf(MDCTextField.prototype), 'destroy', this).call(this);\n    }\n\n    /**\n     * Initiliazes the Text Field's internal state based on the environment's\n     * state.\n     */\n\n  }, {\n    key: 'initialSyncWithDom',\n    value: function initialSyncWithDom() {\n      this.disabled = this.input_.disabled;\n    }\n\n    /**\n     * @return {string} The value of the input.\n     */\n\n  }, {\n    key: 'layout',\n\n\n    /**\n     * Recomputes the outline SVG path for the outline element.\n     */\n    value: function layout() {\n      var openNotch = this.foundation_.shouldFloat;\n      this.foundation_.notchOutline(openNotch);\n    }\n\n    /**\n     * @return {!MDCTextFieldFoundation}\n     */\n\n  }, {\n    key: 'getDefaultFoundation',\n    value: function getDefaultFoundation() {\n      var _this3 = this;\n\n      return new _foundation2.default(\n      /** @type {!MDCTextFieldAdapter} */Object.assign({\n        addClass: function addClass(className) {\n          return _this3.root_.classList.add(className);\n        },\n        removeClass: function removeClass(className) {\n          return _this3.root_.classList.remove(className);\n        },\n        hasClass: function hasClass(className) {\n          return _this3.root_.classList.contains(className);\n        },\n        registerTextFieldInteractionHandler: function registerTextFieldInteractionHandler(evtType, handler) {\n          return _this3.root_.addEventListener(evtType, handler);\n        },\n        deregisterTextFieldInteractionHandler: function deregisterTextFieldInteractionHandler(evtType, handler) {\n          return _this3.root_.removeEventListener(evtType, handler);\n        },\n        registerValidationAttributeChangeHandler: function registerValidationAttributeChangeHandler(handler) {\n          var getAttributesList = function getAttributesList(mutationsList) {\n            return mutationsList.map(function (mutation) {\n              return mutation.attributeName;\n            });\n          };\n          var observer = new MutationObserver(function (mutationsList) {\n            return handler(getAttributesList(mutationsList));\n          });\n          var targetNode = _this3.root_.querySelector(_constants.strings.INPUT_SELECTOR);\n          var config = { attributes: true };\n          observer.observe(targetNode, config);\n          return observer;\n        },\n        deregisterValidationAttributeChangeHandler: function deregisterValidationAttributeChangeHandler(observer) {\n          return observer.disconnect();\n        },\n        isFocused: function isFocused() {\n          return document.activeElement === _this3.root_.querySelector(_constants.strings.INPUT_SELECTOR);\n        },\n        isRtl: function isRtl() {\n          return window.getComputedStyle(_this3.root_).getPropertyValue('direction') === 'rtl';\n        }\n      }, this.getInputAdapterMethods_(), this.getLabelAdapterMethods_(), this.getLineRippleAdapterMethods_(), this.getOutlineAdapterMethods_()), this.getFoundationMap_());\n    }\n\n    /**\n     * @return {!{\n     *   shakeLabel: function(boolean): undefined,\n     *   floatLabel: function(boolean): undefined,\n     *   hasLabel: function(): boolean,\n     *   getLabelWidth: function(): number,\n     * }}\n     */\n\n  }, {\n    key: 'getLabelAdapterMethods_',\n    value: function getLabelAdapterMethods_() {\n      var _this4 = this;\n\n      return {\n        shakeLabel: function shakeLabel(shouldShake) {\n          return _this4.label_.shake(shouldShake);\n        },\n        floatLabel: function floatLabel(shouldFloat) {\n          return _this4.label_.float(shouldFloat);\n        },\n        hasLabel: function hasLabel() {\n          return !!_this4.label_;\n        },\n        getLabelWidth: function getLabelWidth() {\n          return _this4.label_.getWidth();\n        }\n      };\n    }\n\n    /**\n     * @return {!{\n     *   activateLineRipple: function(): undefined,\n     *   deactivateLineRipple: function(): undefined,\n     *   setLineRippleTransformOrigin: function(number): undefined,\n     * }}\n     */\n\n  }, {\n    key: 'getLineRippleAdapterMethods_',\n    value: function getLineRippleAdapterMethods_() {\n      var _this5 = this;\n\n      return {\n        activateLineRipple: function activateLineRipple() {\n          if (_this5.lineRipple_) {\n            _this5.lineRipple_.activate();\n          }\n        },\n        deactivateLineRipple: function deactivateLineRipple() {\n          if (_this5.lineRipple_) {\n            _this5.lineRipple_.deactivate();\n          }\n        },\n        setLineRippleTransformOrigin: function setLineRippleTransformOrigin(normalizedX) {\n          if (_this5.lineRipple_) {\n            _this5.lineRipple_.setRippleCenter(normalizedX);\n          }\n        }\n      };\n    }\n\n    /**\n     * @return {!{\n     *   notchOutline: function(number, boolean): undefined,\n     *   hasOutline: function(): boolean,\n     * }}\n     */\n\n  }, {\n    key: 'getOutlineAdapterMethods_',\n    value: function getOutlineAdapterMethods_() {\n      var _this6 = this;\n\n      return {\n        notchOutline: function notchOutline(labelWidth, isRtl) {\n          return _this6.outline_.notch(labelWidth, isRtl);\n        },\n        closeOutline: function closeOutline() {\n          return _this6.outline_.closeNotch();\n        },\n        hasOutline: function hasOutline() {\n          return !!_this6.outline_;\n        }\n      };\n    }\n\n    /**\n     * @return {!{\n     *   registerInputInteractionHandler: function(string, function()): undefined,\n     *   deregisterInputInteractionHandler: function(string, function()): undefined,\n     *   getNativeInput: function(): ?Element,\n     * }}\n     */\n\n  }, {\n    key: 'getInputAdapterMethods_',\n    value: function getInputAdapterMethods_() {\n      var _this7 = this;\n\n      return {\n        registerInputInteractionHandler: function registerInputInteractionHandler(evtType, handler) {\n          return _this7.input_.addEventListener(evtType, handler);\n        },\n        deregisterInputInteractionHandler: function deregisterInputInteractionHandler(evtType, handler) {\n          return _this7.input_.removeEventListener(evtType, handler);\n        },\n        getNativeInput: function getNativeInput() {\n          return _this7.input_;\n        }\n      };\n    }\n\n    /**\n     * Returns a map of all subcomponents to subfoundations.\n     * @return {!FoundationMapType}\n     */\n\n  }, {\n    key: 'getFoundationMap_',\n    value: function getFoundationMap_() {\n      return {\n        helperText: this.helperText_ ? this.helperText_.foundation : undefined,\n        icon: this.icon_ ? this.icon_.foundation : undefined\n      };\n    }\n  }, {\n    key: 'value',\n    get: function get() {\n      return this.foundation_.getValue();\n    }\n\n    /**\n     * @param {string} value The value to set on the input.\n     */\n    ,\n    set: function set(value) {\n      this.foundation_.setValue(value);\n    }\n\n    /**\n     * @return {boolean} True if the Text Field is disabled.\n     */\n\n  }, {\n    key: 'disabled',\n    get: function get() {\n      return this.foundation_.isDisabled();\n    }\n\n    /**\n     * @param {boolean} disabled Sets the Text Field disabled or enabled.\n     */\n    ,\n    set: function set(disabled) {\n      this.foundation_.setDisabled(disabled);\n    }\n\n    /**\n     * @return {boolean} valid True if the Text Field is valid.\n     */\n\n  }, {\n    key: 'valid',\n    get: function get() {\n      return this.foundation_.isValid();\n    }\n\n    /**\n     * @param {boolean} valid Sets the Text Field valid or invalid.\n     */\n    ,\n    set: function set(valid) {\n      this.foundation_.setValid(valid);\n    }\n\n    /**\n     * @return {boolean} True if the Text Field is required.\n     */\n\n  }, {\n    key: 'required',\n    get: function get() {\n      return this.input_.required;\n    }\n\n    /**\n     * @param {boolean} required Sets the Text Field to required.\n     */\n    ,\n    set: function set(required) {\n      this.input_.required = required;\n    }\n\n    /**\n     * @return {string} The input element's validation pattern.\n     */\n\n  }, {\n    key: 'pattern',\n    get: function get() {\n      return this.input_.pattern;\n    }\n\n    /**\n     * @param {string} pattern Sets the input element's validation pattern.\n     */\n    ,\n    set: function set(pattern) {\n      this.input_.pattern = pattern;\n    }\n\n    /**\n     * @return {number} The input element's minLength.\n     */\n\n  }, {\n    key: 'minLength',\n    get: function get() {\n      return this.input_.minLength;\n    }\n\n    /**\n     * @param {number} minLength Sets the input element's minLength.\n     */\n    ,\n    set: function set(minLength) {\n      this.input_.minLength = minLength;\n    }\n\n    /**\n     * @return {number} The input element's maxLength.\n     */\n\n  }, {\n    key: 'maxLength',\n    get: function get() {\n      return this.input_.maxLength;\n    }\n\n    /**\n     * @param {number} maxLength Sets the input element's maxLength.\n     */\n    ,\n    set: function set(maxLength) {\n      // Chrome throws exception if maxLength is set < 0\n      if (maxLength < 0) {\n        this.input_.removeAttribute('maxLength');\n      } else {\n        this.input_.maxLength = maxLength;\n      }\n    }\n\n    /**\n     * @return {string} The input element's min.\n     */\n\n  }, {\n    key: 'min',\n    get: function get() {\n      return this.input_.min;\n    }\n\n    /**\n     * @param {string} min Sets the input element's min.\n     */\n    ,\n    set: function set(min) {\n      this.input_.min = min;\n    }\n\n    /**\n     * @return {string} The input element's max.\n     */\n\n  }, {\n    key: 'max',\n    get: function get() {\n      return this.input_.max;\n    }\n\n    /**\n     * @param {string} max Sets the input element's max.\n     */\n    ,\n    set: function set(max) {\n      this.input_.max = max;\n    }\n\n    /**\n     * @return {string} The input element's step.\n     */\n\n  }, {\n    key: 'step',\n    get: function get() {\n      return this.input_.step;\n    }\n\n    /**\n     * @param {string} step Sets the input element's step.\n     */\n    ,\n    set: function set(step) {\n      this.input_.step = step;\n    }\n\n    /**\n     * Sets the helper text element content.\n     * @param {string} content\n     */\n\n  }, {\n    key: 'helperTextContent',\n    set: function set(content) {\n      this.foundation_.setHelperTextContent(content);\n    }\n\n    /**\n     * Sets the aria label of the icon.\n     * @param {string} label\n     */\n\n  }, {\n    key: 'iconAriaLabel',\n    set: function set(label) {\n      this.foundation_.setIconAriaLabel(label);\n    }\n\n    /**\n     * Sets the text content of the icon.\n     * @param {string} content\n     */\n\n  }, {\n    key: 'iconContent',\n    set: function set(content) {\n      this.foundation_.setIconContent(content);\n    }\n  }], [{\n    key: 'attachTo',\n    value: function attachTo(root) {\n      return new MDCTextField(root);\n    }\n  }]);\n\n  return MDCTextField;\n}(_component2.default);\n\nexports.MDCTextField = MDCTextField;\nexports.MDCTextFieldFoundation = _foundation2.default;\nexports.MDCTextFieldHelperText = _index3.MDCTextFieldHelperText;\nexports.MDCTextFieldHelperTextFoundation = _index3.MDCTextFieldHelperTextFoundation;\nexports.MDCTextFieldIcon = _index4.MDCTextFieldIcon;\nexports.MDCTextFieldIconFoundation = _index4.MDCTextFieldIconFoundation;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * Adapter for MDC Notched Outline.\n *\n * Defines the shape of the adapter expected by the foundation. Implement this\n * adapter to integrate the Notched Outline into your framework. See\n * https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md\n * for more information.\n *\n * @record\n */\nvar MDCNotchedOutlineAdapter = function () {\n  function MDCNotchedOutlineAdapter() {\n    _classCallCheck(this, MDCNotchedOutlineAdapter);\n  }\n\n  _createClass(MDCNotchedOutlineAdapter, [{\n    key: \"getWidth\",\n\n    /**\n     * Returns the width of the root element.\n     * @return {number}\n     */\n    value: function getWidth() {}\n\n    /**\n     * Returns the height of the root element.\n     * @return {number}\n     */\n\n  }, {\n    key: \"getHeight\",\n    value: function getHeight() {}\n\n    /**\n     * Adds a class to the root element.\n     * @param {string} className\n     */\n\n  }, {\n    key: \"addClass\",\n    value: function addClass(className) {}\n\n    /**\n     * Removes a class from the root element.\n     * @param {string} className\n     */\n\n  }, {\n    key: \"removeClass\",\n    value: function removeClass(className) {}\n\n    /**\n     * Sets the \"d\" attribute of the outline element's SVG path.\n     * @param {string} value\n     */\n\n  }, {\n    key: \"setOutlinePathAttr\",\n    value: function setOutlinePathAttr(value) {}\n\n    /**\n     * Returns the idle outline element's computed style value of the given css property `propertyName`.\n     * We achieve this via `getComputedStyle(...).getPropertyValue(propertyName)`.\n     * @param {string} propertyName\n     * @return {string}\n     */\n\n  }, {\n    key: \"getIdleOutlineStyleValue\",\n    value: function getIdleOutlineStyleValue(propertyName) {}\n  }]);\n\n  return MDCNotchedOutlineAdapter;\n}();\n\nexports.default = MDCNotchedOutlineAdapter;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.FoundationMapType = exports.NativeInputType = exports.MDCTextFieldAdapter = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /**\nlicense\nopyright 2017 Google Inc. All Rights Reserved.\nnicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nou may obtain a copy of the License at\nnhttp://www.apache.org/licenses/LICENSE-2.0\nn                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      * Unless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\neither express or implied.\nee the License for the specific language governing permissions and\nlimitations under the License.\nn\n/* eslint-disable no-unused-vars */\n\n\nvar _foundation = require('./helper-text/foundation');\n\nvar _foundation2 = _interopRequireDefault(_foundation);\n\nvar _foundation3 = require('./icon/foundation');\n\nvar _foundation4 = _interopRequireDefault(_foundation3);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * @typedef {{\n *   value: string,\n *   disabled: boolean,\n *   badInput: boolean,\n *   validity: {\n *     badInput: boolean,\n *     valid: boolean,\n *   },\n * }}\n */\nvar NativeInputType = void 0;\n\n/**\n * @typedef {{\n *   helperText: (!MDCTextFieldHelperTextFoundation|undefined),\n *   icon: (!MDCTextFieldIconFoundation|undefined),\n * }}\n */\nvar FoundationMapType = void 0;\n\n/**\n * Adapter for MDC Text Field.\n *\n * Defines the shape of the adapter expected by the foundation. Implement this\n * adapter to integrate the Text Field into your framework. See\n * https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md\n * for more information.\n *\n * @record\n */\n\nvar MDCTextFieldAdapter = function () {\n  function MDCTextFieldAdapter() {\n    _classCallCheck(this, MDCTextFieldAdapter);\n  }\n\n  _createClass(MDCTextFieldAdapter, [{\n    key: 'addClass',\n\n    /**\n     * Adds a class to the root Element.\n     * @param {string} className\n     */\n    value: function addClass(className) {}\n\n    /**\n     * Removes a class from the root Element.\n     * @param {string} className\n     */\n\n  }, {\n    key: 'removeClass',\n    value: function removeClass(className) {}\n\n    /**\n     * Returns true if the root element contains the given class name.\n     * @param {string} className\n     * @return {boolean}\n     */\n\n  }, {\n    key: 'hasClass',\n    value: function hasClass(className) {}\n\n    /**\n     * Registers an event handler on the root element for a given event.\n     * @param {string} type\n     * @param {function(!Event): undefined} handler\n     */\n\n  }, {\n    key: 'registerTextFieldInteractionHandler',\n    value: function registerTextFieldInteractionHandler(type, handler) {}\n\n    /**\n     * Deregisters an event handler on the root element for a given event.\n     * @param {string} type\n     * @param {function(!Event): undefined} handler\n     */\n\n  }, {\n    key: 'deregisterTextFieldInteractionHandler',\n    value: function deregisterTextFieldInteractionHandler(type, handler) {}\n\n    /**\n     * Registers an event listener on the native input element for a given event.\n     * @param {string} evtType\n     * @param {function(!Event): undefined} handler\n     */\n\n  }, {\n    key: 'registerInputInteractionHandler',\n    value: function registerInputInteractionHandler(evtType, handler) {}\n\n    /**\n     * Deregisters an event listener on the native input element for a given event.\n     * @param {string} evtType\n     * @param {function(!Event): undefined} handler\n     */\n\n  }, {\n    key: 'deregisterInputInteractionHandler',\n    value: function deregisterInputInteractionHandler(evtType, handler) {}\n\n    /**\n     * Registers a validation attribute change listener on the input element.\n     * Handler accepts list of attribute names.\n     * @param {function(!Array<string>): undefined} handler\n     * @return {!MutationObserver}\n     */\n\n  }, {\n    key: 'registerValidationAttributeChangeHandler',\n    value: function registerValidationAttributeChangeHandler(handler) {}\n\n    /**\n     * Disconnects a validation attribute observer on the input element.\n     * @param {!MutationObserver} observer\n     */\n\n  }, {\n    key: 'deregisterValidationAttributeChangeHandler',\n    value: function deregisterValidationAttributeChangeHandler(observer) {}\n\n    /**\n     * Returns an object representing the native text input element, with a\n     * similar API shape. The object returned should include the value, disabled\n     * and badInput properties, as well as the checkValidity() function. We never\n     * alter the value within our code, however we do update the disabled\n     * property, so if you choose to duck-type the return value for this method\n     * in your implementation it's important to keep this in mind. Also note that\n     * this method can return null, which the foundation will handle gracefully.\n     * @return {?Element|?NativeInputType}\n     */\n\n  }, {\n    key: 'getNativeInput',\n    value: function getNativeInput() {}\n\n    /**\n     * Returns true if the textfield is focused.\n     * We achieve this via `document.activeElement === this.root_`.\n     * @return {boolean}\n     */\n\n  }, {\n    key: 'isFocused',\n    value: function isFocused() {}\n\n    /**\n     * Returns true if the direction of the root element is set to RTL.\n     * @return {boolean}\n     */\n\n  }, {\n    key: 'isRtl',\n    value: function isRtl() {}\n\n    /**\n     * Activates the line ripple.\n     */\n\n  }, {\n    key: 'activateLineRipple',\n    value: function activateLineRipple() {}\n\n    /**\n     * Deactivates the line ripple.\n     */\n\n  }, {\n    key: 'deactivateLineRipple',\n    value: function deactivateLineRipple() {}\n\n    /**\n     * Sets the transform origin of the line ripple.\n     * @param {number} normalizedX\n     */\n\n  }, {\n    key: 'setLineRippleTransformOrigin',\n    value: function setLineRippleTransformOrigin(normalizedX) {}\n\n    /**\n     * Only implement if label exists.\n     * Shakes label if shouldShake is true.\n     * @param {boolean} shouldShake\n     */\n\n  }, {\n    key: 'shakeLabel',\n    value: function shakeLabel(shouldShake) {}\n\n    /**\n     * Only implement if label exists.\n     * Floats the label above the input element if shouldFloat is true.\n     * @param {boolean} shouldFloat\n     */\n\n  }, {\n    key: 'floatLabel',\n    value: function floatLabel(shouldFloat) {}\n\n    /**\n     * Returns true if label element exists, false if it doesn't.\n     * @return {boolean}\n     */\n\n  }, {\n    key: 'hasLabel',\n    value: function hasLabel() {}\n\n    /**\n     * Only implement if label exists.\n     * Returns width of label in pixels.\n     * @return {number}\n     */\n\n  }, {\n    key: 'getLabelWidth',\n    value: function getLabelWidth() {}\n\n    /**\n     * Returns true if outline element exists, false if it doesn't.\n     * @return {boolean}\n     */\n\n  }, {\n    key: 'hasOutline',\n    value: function hasOutline() {}\n\n    /**\n     * Only implement if outline element exists.\n     * Updates SVG Path and outline element based on the\n     * label element width and RTL context.\n     * @param {number} labelWidth\n     * @param {boolean=} isRtl\n     */\n\n  }, {\n    key: 'notchOutline',\n    value: function notchOutline(labelWidth, isRtl) {}\n\n    /**\n     * Only implement if outline element exists.\n     * Closes notch in outline element.\n     */\n\n  }, {\n    key: 'closeOutline',\n    value: function closeOutline() {}\n  }]);\n\n  return MDCTextFieldAdapter;\n}();\n\nexports.MDCTextFieldAdapter = MDCTextFieldAdapter;\nexports.NativeInputType = NativeInputType;\nexports.FoundationMapType = FoundationMapType;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MDCNotchedOutlineFoundation = exports.MDCNotchedOutline = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _component = require('@material/base/component');\n\nvar _component2 = _interopRequireDefault(_component);\n\nvar _adapter = require('./adapter');\n\nvar _adapter2 = _interopRequireDefault(_adapter);\n\nvar _foundation = require('./foundation');\n\nvar _foundation2 = _interopRequireDefault(_foundation);\n\nvar _constants = require('./constants');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @license\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Copyright 2017 Google Inc. All Rights Reserved.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Licensed under the Apache License, Version 2.0 (the \"License\");\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * you may not use this file except in compliance with the License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * You may obtain a copy of the License at\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\nhttp://www.apache.org/licenses/LICENSE-2.0\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Unless required by applicable law or agreed to in writing, software\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * distributed under the License is distributed on an \"AS IS\" BASIS,\neither express or implied.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * See the License for the specific language governing permissions and\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * limitations under the License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n/**\n * @extends {MDCComponent<!MDCNotchedOutlineFoundation>}\n * @final\n */\nvar MDCNotchedOutline = function (_MDCComponent) {\n  _inherits(MDCNotchedOutline, _MDCComponent);\n\n  function MDCNotchedOutline() {\n    _classCallCheck(this, MDCNotchedOutline);\n\n    return _possibleConstructorReturn(this, (MDCNotchedOutline.__proto__ || Object.getPrototypeOf(MDCNotchedOutline)).apply(this, arguments));\n  }\n\n  _createClass(MDCNotchedOutline, [{\n    key: 'notch',\n\n\n    /**\n      * Updates outline selectors and SVG path to open notch.\n      * @param {number} notchWidth The notch width in the outline.\n      * @param {boolean=} isRtl Determines if outline is rtl. If rtl is true, notch\n      * will be right justified in outline path, otherwise left justified.\n      */\n    value: function notch(notchWidth, isRtl) {\n      this.foundation_.notch(notchWidth, isRtl);\n    }\n\n    /**\n     * Updates the outline selectors to close notch and return it to idle state.\n     */\n\n  }, {\n    key: 'closeNotch',\n    value: function closeNotch() {\n      this.foundation_.closeNotch();\n    }\n\n    /**\n     * @return {!MDCNotchedOutlineFoundation}\n     */\n\n  }, {\n    key: 'getDefaultFoundation',\n    value: function getDefaultFoundation() {\n      var _this2 = this;\n\n      return new _foundation2.default({\n        getWidth: function getWidth() {\n          return _this2.root_.offsetWidth;\n        },\n        getHeight: function getHeight() {\n          return _this2.root_.offsetHeight;\n        },\n        addClass: function addClass(className) {\n          return _this2.root_.classList.add(className);\n        },\n        removeClass: function removeClass(className) {\n          return _this2.root_.classList.remove(className);\n        },\n        setOutlinePathAttr: function setOutlinePathAttr(value) {\n          var path = _this2.root_.querySelector(_constants.strings.PATH_SELECTOR);\n          path.setAttribute('d', value);\n        },\n        getIdleOutlineStyleValue: function getIdleOutlineStyleValue(propertyName) {\n          var idleOutlineElement = _this2.root_.parentNode.querySelector(_constants.strings.IDLE_OUTLINE_SELECTOR);\n          return window.getComputedStyle(idleOutlineElement).getPropertyValue(propertyName);\n        }\n      });\n    }\n  }], [{\n    key: 'attachTo',\n\n    /**\n     * @param {!Element} root\n     * @return {!MDCNotchedOutline}\n     */\n    value: function attachTo(root) {\n      return new MDCNotchedOutline(root);\n    }\n  }]);\n\n  return MDCNotchedOutline;\n}(_component2.default);\n\nexports.MDCNotchedOutline = MDCNotchedOutline;\nexports.MDCNotchedOutlineFoundation = _foundation2.default;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _foundation = require('@material/base/foundation');\n\nvar _foundation2 = _interopRequireDefault(_foundation);\n\nvar _adapter = require('./adapter');\n\nvar _adapter2 = _interopRequireDefault(_adapter);\n\nvar _constants = require('./constants');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @license\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Copyright 2017 Google Inc. All Rights Reserved.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Licensed under the Apache License, Version 2.0 (the \"License\");\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * you may not use this file except in compliance with the License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * You may obtain a copy of the License at\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\nhttp://www.apache.org/licenses/LICENSE-2.0\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Unless required by applicable law or agreed to in writing, software\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * distributed under the License is distributed on an \"AS IS\" BASIS,\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * See the License for the specific language governing permissions and\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * limitations under the License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n/**\n * @extends {MDCFoundation<!MDCTextFieldIconAdapter>}\n * @final\n */\nvar MDCTextFieldIconFoundation = function (_MDCFoundation) {\n  _inherits(MDCTextFieldIconFoundation, _MDCFoundation);\n\n  _createClass(MDCTextFieldIconFoundation, null, [{\n    key: 'strings',\n\n    /** @return enum {string} */\n    get: function get() {\n      return _constants.strings;\n    }\n\n    /**\n     * {@see MDCTextFieldIconAdapter} for typing information on parameters and return\n     * types.\n     * @return {!MDCTextFieldIconAdapter}\n     */\n\n  }, {\n    key: 'defaultAdapter',\n    get: function get() {\n      return (/** @type {!MDCTextFieldIconAdapter} */{\n          getAttr: function getAttr() {},\n          setAttr: function setAttr() {},\n          removeAttr: function removeAttr() {},\n          setContent: function setContent() {},\n          registerInteractionHandler: function registerInteractionHandler() {},\n          deregisterInteractionHandler: function deregisterInteractionHandler() {},\n          notifyIconAction: function notifyIconAction() {}\n        }\n      );\n    }\n\n    /**\n     * @param {!MDCTextFieldIconAdapter} adapter\n     */\n\n  }]);\n\n  function MDCTextFieldIconFoundation(adapter) {\n    _classCallCheck(this, MDCTextFieldIconFoundation);\n\n    /** @private {string?} */\n    var _this = _possibleConstructorReturn(this, (MDCTextFieldIconFoundation.__proto__ || Object.getPrototypeOf(MDCTextFieldIconFoundation)).call(this, Object.assign(MDCTextFieldIconFoundation.defaultAdapter, adapter)));\n\n    _this.savedTabIndex_ = null;\n\n    /** @private {function(!Event): undefined} */\n    _this.interactionHandler_ = function (evt) {\n      return _this.handleInteraction(evt);\n    };\n    return _this;\n  }\n\n  _createClass(MDCTextFieldIconFoundation, [{\n    key: 'init',\n    value: function init() {\n      var _this2 = this;\n\n      this.savedTabIndex_ = this.adapter_.getAttr('tabindex');\n\n      ['click', 'keydown'].forEach(function (evtType) {\n        _this2.adapter_.registerInteractionHandler(evtType, _this2.interactionHandler_);\n      });\n    }\n  }, {\n    key: 'destroy',\n    value: function destroy() {\n      var _this3 = this;\n\n      ['click', 'keydown'].forEach(function (evtType) {\n        _this3.adapter_.deregisterInteractionHandler(evtType, _this3.interactionHandler_);\n      });\n    }\n\n    /** @param {boolean} disabled */\n\n  }, {\n    key: 'setDisabled',\n    value: function setDisabled(disabled) {\n      if (!this.savedTabIndex_) {\n        return;\n      }\n\n      if (disabled) {\n        this.adapter_.setAttr('tabindex', '-1');\n        this.adapter_.removeAttr('role');\n      } else {\n        this.adapter_.setAttr('tabindex', this.savedTabIndex_);\n        this.adapter_.setAttr('role', _constants.strings.ICON_ROLE);\n      }\n    }\n\n    /** @param {string} label */\n\n  }, {\n    key: 'setAriaLabel',\n    value: function setAriaLabel(label) {\n      this.adapter_.setAttr('aria-label', label);\n    }\n\n    /** @param {string} content */\n\n  }, {\n    key: 'setContent',\n    value: function setContent(content) {\n      this.adapter_.setContent(content);\n    }\n\n    /**\n     * Handles an interaction event\n     * @param {!Event} evt\n     */\n\n  }, {\n    key: 'handleInteraction',\n    value: function handleInteraction(evt) {\n      if (evt.type === 'click' || evt.key === 'Enter' || evt.keyCode === 13) {\n        this.adapter_.notifyIconAction();\n      }\n    }\n  }]);\n\n  return MDCTextFieldIconFoundation;\n}(_foundation2.default);\n\nexports.default = MDCTextFieldIconFoundation;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MDCFloatingLabelFoundation = exports.MDCFloatingLabel = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _component = require('@material/base/component');\n\nvar _component2 = _interopRequireDefault(_component);\n\nvar _adapter = require('./adapter');\n\nvar _adapter2 = _interopRequireDefault(_adapter);\n\nvar _foundation = require('./foundation');\n\nvar _foundation2 = _interopRequireDefault(_foundation);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @license\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Copyright 2016 Google Inc. All Rights Reserved.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Licensed under the Apache License, Version 2.0 (the \"License\");\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * you may not use this file except in compliance with the License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * You may obtain a copy of the License at\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\nhttp://www.apache.org/licenses/LICENSE-2.0\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Unless required by applicable law or agreed to in writing, software\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * distributed under the License is distributed on an \"AS IS\" BASIS,\neither express or implied.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * See the License for the specific language governing permissions and\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * limitations under the License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n/**\n * @extends {MDCComponent<!MDCFloatingLabelFoundation>}\n * @final\n */\nvar MDCFloatingLabel = function (_MDCComponent) {\n  _inherits(MDCFloatingLabel, _MDCComponent);\n\n  function MDCFloatingLabel() {\n    _classCallCheck(this, MDCFloatingLabel);\n\n    return _possibleConstructorReturn(this, (MDCFloatingLabel.__proto__ || Object.getPrototypeOf(MDCFloatingLabel)).apply(this, arguments));\n  }\n\n  _createClass(MDCFloatingLabel, [{\n    key: 'shake',\n\n\n    /**\n     * Styles the label to produce the label shake for errors.\n     * @param {boolean} shouldShake styles the label to shake by adding shake class\n     * if true, otherwise will stop shaking by removing shake class.\n     */\n    value: function shake(shouldShake) {\n      this.foundation_.shake(shouldShake);\n    }\n\n    /**\n     * Styles label to float/dock.\n     * @param {boolean} shouldFloat styles the label to float by adding float class\n     * if true, otherwise docks the label by removing the float class.\n     */\n\n  }, {\n    key: 'float',\n    value: function float(shouldFloat) {\n      this.foundation_.float(shouldFloat);\n    }\n\n    /**\n     * @return {number}\n     */\n\n  }, {\n    key: 'getWidth',\n    value: function getWidth() {\n      return this.foundation_.getWidth();\n    }\n\n    /**\n     * @return {!MDCFloatingLabelFoundation}\n     */\n\n  }, {\n    key: 'getDefaultFoundation',\n    value: function getDefaultFoundation() {\n      var _this2 = this;\n\n      return new _foundation2.default({\n        addClass: function addClass(className) {\n          return _this2.root_.classList.add(className);\n        },\n        removeClass: function removeClass(className) {\n          return _this2.root_.classList.remove(className);\n        },\n        getWidth: function getWidth() {\n          return _this2.root_.offsetWidth;\n        },\n        registerInteractionHandler: function registerInteractionHandler(evtType, handler) {\n          return _this2.root_.addEventListener(evtType, handler);\n        },\n        deregisterInteractionHandler: function deregisterInteractionHandler(evtType, handler) {\n          return _this2.root_.removeEventListener(evtType, handler);\n        }\n      });\n    }\n  }], [{\n    key: 'attachTo',\n\n    /**\n     * @param {!Element} root\n     * @return {!MDCFloatingLabel}\n     */\n    value: function attachTo(root) {\n      return new MDCFloatingLabel(root);\n    }\n  }]);\n\n  return MDCFloatingLabel;\n}(_component2.default);\n\nexports.MDCFloatingLabel = MDCFloatingLabel;\nexports.MDCFloatingLabelFoundation = _foundation2.default;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MDCTextFieldHelperTextFoundation = exports.MDCTextFieldHelperText = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _component = require('@material/base/component');\n\nvar _component2 = _interopRequireDefault(_component);\n\nvar _adapter = require('./adapter');\n\nvar _adapter2 = _interopRequireDefault(_adapter);\n\nvar _foundation = require('./foundation');\n\nvar _foundation2 = _interopRequireDefault(_foundation);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @license\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Copyright 2017 Google Inc. All Rights Reserved.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Licensed under the Apache License, Version 2.0 (the \"License\");\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * you may not use this file except in compliance with the License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * You may obtain a copy of the License at\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\nhttp://www.apache.org/licenses/LICENSE-2.0\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Unless required by applicable law or agreed to in writing, software\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * distributed under the License is distributed on an \"AS IS\" BASIS,\neither express or implied.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * See the License for the specific language governing permissions and\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * limitations under the License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n/**\n * @extends {MDCComponent<!MDCTextFieldHelperTextFoundation>}\n * @final\n */\nvar MDCTextFieldHelperText = function (_MDCComponent) {\n  _inherits(MDCTextFieldHelperText, _MDCComponent);\n\n  function MDCTextFieldHelperText() {\n    _classCallCheck(this, MDCTextFieldHelperText);\n\n    return _possibleConstructorReturn(this, (MDCTextFieldHelperText.__proto__ || Object.getPrototypeOf(MDCTextFieldHelperText)).apply(this, arguments));\n  }\n\n  _createClass(MDCTextFieldHelperText, [{\n    key: 'getDefaultFoundation',\n\n\n    /**\n     * @return {!MDCTextFieldHelperTextFoundation}\n     */\n    value: function getDefaultFoundation() {\n      var _this2 = this;\n\n      return new _foundation2.default( /** @type {!MDCTextFieldHelperTextAdapter} */Object.assign({\n        addClass: function addClass(className) {\n          return _this2.root_.classList.add(className);\n        },\n        removeClass: function removeClass(className) {\n          return _this2.root_.classList.remove(className);\n        },\n        hasClass: function hasClass(className) {\n          return _this2.root_.classList.contains(className);\n        },\n        setAttr: function setAttr(attr, value) {\n          return _this2.root_.setAttribute(attr, value);\n        },\n        removeAttr: function removeAttr(attr) {\n          return _this2.root_.removeAttribute(attr);\n        },\n        setContent: function setContent(content) {\n          _this2.root_.textContent = content;\n        }\n      }));\n    }\n  }, {\n    key: 'foundation',\n\n\n    /**\n     * @return {!MDCTextFieldHelperTextFoundation}\n     */\n    get: function get() {\n      return this.foundation_;\n    }\n  }], [{\n    key: 'attachTo',\n\n    /**\n     * @param {!Element} root\n     * @return {!MDCTextFieldHelperText}\n     */\n    value: function attachTo(root) {\n      return new MDCTextFieldHelperText(root);\n    }\n  }]);\n\n  return MDCTextFieldHelperText;\n}(_component2.default);\n\nexports.MDCTextFieldHelperText = MDCTextFieldHelperText;\nexports.MDCTextFieldHelperTextFoundation = _foundation2.default;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MDCLineRippleFoundation = exports.MDCLineRipple = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _component = require('@material/base/component');\n\nvar _component2 = _interopRequireDefault(_component);\n\nvar _adapter = require('./adapter');\n\nvar _adapter2 = _interopRequireDefault(_adapter);\n\nvar _foundation = require('./foundation');\n\nvar _foundation2 = _interopRequireDefault(_foundation);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @license\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Copyright 2018 Google Inc. All Rights Reserved.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Licensed under the Apache License, Version 2.0 (the \"License\");\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * you may not use this file except in compliance with the License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * You may obtain a copy of the License at\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\nhttp://www.apache.org/licenses/LICENSE-2.0\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Unless required by applicable law or agreed to in writing, software\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * distributed under the License is distributed on an \"AS IS\" BASIS,\neither express or implied.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * See the License for the specific language governing permissions and\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * limitations under the License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n/**\n * @extends {MDCComponent<!MDCLineRippleFoundation>}\n * @final\n */\nvar MDCLineRipple = function (_MDCComponent) {\n  _inherits(MDCLineRipple, _MDCComponent);\n\n  function MDCLineRipple() {\n    _classCallCheck(this, MDCLineRipple);\n\n    return _possibleConstructorReturn(this, (MDCLineRipple.__proto__ || Object.getPrototypeOf(MDCLineRipple)).apply(this, arguments));\n  }\n\n  _createClass(MDCLineRipple, [{\n    key: 'activate',\n\n\n    /**\n     * Activates the line ripple\n     */\n    value: function activate() {\n      this.foundation_.activate();\n    }\n\n    /**\n     * Deactivates the line ripple\n     */\n\n  }, {\n    key: 'deactivate',\n    value: function deactivate() {\n      this.foundation_.deactivate();\n    }\n\n    /**\n     * Sets the transform origin given a user's click location. The `rippleCenter` is the\n     * x-coordinate of the middle of the ripple.\n     * @param {number} xCoordinate\n     */\n\n  }, {\n    key: 'setRippleCenter',\n    value: function setRippleCenter(xCoordinate) {\n      this.foundation_.setRippleCenter(xCoordinate);\n    }\n\n    /**\n     * @return {!MDCLineRippleFoundation}\n     */\n\n  }, {\n    key: 'getDefaultFoundation',\n    value: function getDefaultFoundation() {\n      var _this2 = this;\n\n      return new _foundation2.default( /** @type {!MDCLineRippleAdapter} */Object.assign({\n        addClass: function addClass(className) {\n          return _this2.root_.classList.add(className);\n        },\n        removeClass: function removeClass(className) {\n          return _this2.root_.classList.remove(className);\n        },\n        hasClass: function hasClass(className) {\n          return _this2.root_.classList.contains(className);\n        },\n        setStyle: function setStyle(propertyName, value) {\n          return _this2.root_.style[propertyName] = value;\n        },\n        registerEventHandler: function registerEventHandler(evtType, handler) {\n          return _this2.root_.addEventListener(evtType, handler);\n        },\n        deregisterEventHandler: function deregisterEventHandler(evtType, handler) {\n          return _this2.root_.removeEventListener(evtType, handler);\n        }\n      }));\n    }\n  }], [{\n    key: 'attachTo',\n\n    /**\n     * @param {!Element} root\n     * @return {!MDCLineRipple}\n     */\n    value: function attachTo(root) {\n      return new MDCLineRipple(root);\n    }\n  }]);\n\n  return MDCLineRipple;\n}(_component2.default);\n\nexports.MDCLineRipple = MDCLineRipple;\nexports.MDCLineRippleFoundation = _foundation2.default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * Adapter for MDC Text Field Icon.\n *\n * Defines the shape of the adapter expected by the foundation. Implement this\n * adapter to integrate the text field icon into your framework. See\n * https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md\n * for more information.\n *\n * @record\n */\nvar MDCTextFieldIconAdapter = function () {\n  function MDCTextFieldIconAdapter() {\n    _classCallCheck(this, MDCTextFieldIconAdapter);\n  }\n\n  _createClass(MDCTextFieldIconAdapter, [{\n    key: \"getAttr\",\n\n    /**\n     * Gets the value of an attribute on the icon element.\n     * @param {string} attr\n     * @return {string}\n     */\n    value: function getAttr(attr) {}\n\n    /**\n     * Sets an attribute on the icon element.\n     * @param {string} attr\n     * @param {string} value\n     */\n\n  }, {\n    key: \"setAttr\",\n    value: function setAttr(attr, value) {}\n\n    /**\n     * Removes an attribute from the icon element.\n     * @param {string} attr\n     */\n\n  }, {\n    key: \"removeAttr\",\n    value: function removeAttr(attr) {}\n\n    /**\n     * Sets the text content of the icon element.\n     * @param {string} content\n     */\n\n  }, {\n    key: \"setContent\",\n    value: function setContent(content) {}\n\n    /**\n     * Registers an event listener on the icon element for a given event.\n     * @param {string} evtType\n     * @param {function(!Event): undefined} handler\n     */\n\n  }, {\n    key: \"registerInteractionHandler\",\n    value: function registerInteractionHandler(evtType, handler) {}\n\n    /**\n     * Deregisters an event listener on the icon element for a given event.\n     * @param {string} evtType\n     * @param {function(!Event): undefined} handler\n     */\n\n  }, {\n    key: \"deregisterInteractionHandler\",\n    value: function deregisterInteractionHandler(evtType, handler) {}\n\n    /**\n     * Emits a custom event \"MDCTextField:icon\" denoting a user has clicked the icon.\n     */\n\n  }, {\n    key: \"notifyIconAction\",\n    value: function notifyIconAction() {}\n  }]);\n\n  return MDCTextFieldIconAdapter;\n}();\n\nexports.default = MDCTextFieldIconAdapter;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _foundation = require('@material/base/foundation');\n\nvar _foundation2 = _interopRequireDefault(_foundation);\n\nvar _adapter = require('./adapter');\n\nvar _adapter2 = _interopRequireDefault(_adapter);\n\nvar _constants = require('./constants');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @license\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Copyright 2016 Google Inc. All Rights Reserved.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Licensed under the Apache License, Version 2.0 (the \"License\");\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * you may not use this file except in compliance with the License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * You may obtain a copy of the License at\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\nhttp://www.apache.org/licenses/LICENSE-2.0\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Unless required by applicable law or agreed to in writing, software\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * distributed under the License is distributed on an \"AS IS\" BASIS,\neither express or implied.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * See the License for the specific language governing permissions and\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * limitations under the License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n/**\n * @extends {MDCFoundation<!MDCFloatingLabelAdapter>}\n * @final\n */\nvar MDCFloatingLabelFoundation = function (_MDCFoundation) {\n  _inherits(MDCFloatingLabelFoundation, _MDCFoundation);\n\n  _createClass(MDCFloatingLabelFoundation, null, [{\n    key: 'cssClasses',\n\n    /** @return enum {string} */\n    get: function get() {\n      return _constants.cssClasses;\n    }\n\n    /**\n     * {@see MDCFloatingLabelAdapter} for typing information on parameters and return\n     * types.\n     * @return {!MDCFloatingLabelAdapter}\n     */\n\n  }, {\n    key: 'defaultAdapter',\n    get: function get() {\n      return (/** @type {!MDCFloatingLabelAdapter} */{\n          addClass: function addClass() {},\n          removeClass: function removeClass() {},\n          getWidth: function getWidth() {},\n          registerInteractionHandler: function registerInteractionHandler() {},\n          deregisterInteractionHandler: function deregisterInteractionHandler() {}\n        }\n      );\n    }\n\n    /**\n     * @param {!MDCFloatingLabelAdapter} adapter\n     */\n\n  }]);\n\n  function MDCFloatingLabelFoundation(adapter) {\n    _classCallCheck(this, MDCFloatingLabelFoundation);\n\n    /** @private {function(!Event): undefined} */\n    var _this = _possibleConstructorReturn(this, (MDCFloatingLabelFoundation.__proto__ || Object.getPrototypeOf(MDCFloatingLabelFoundation)).call(this, Object.assign(MDCFloatingLabelFoundation.defaultAdapter, adapter)));\n\n    _this.shakeAnimationEndHandler_ = function () {\n      return _this.handleShakeAnimationEnd_();\n    };\n    return _this;\n  }\n\n  _createClass(MDCFloatingLabelFoundation, [{\n    key: 'init',\n    value: function init() {\n      this.adapter_.registerInteractionHandler('animationend', this.shakeAnimationEndHandler_);\n    }\n  }, {\n    key: 'destroy',\n    value: function destroy() {\n      this.adapter_.deregisterInteractionHandler('animationend', this.shakeAnimationEndHandler_);\n    }\n\n    /**\n     * Returns the width of the label element.\n     * @return {number}\n     */\n\n  }, {\n    key: 'getWidth',\n    value: function getWidth() {\n      return this.adapter_.getWidth();\n    }\n\n    /**\n     * Styles the label to produce the label shake for errors.\n     * @param {boolean} shouldShake adds shake class if true,\n     * otherwise removes shake class.\n     */\n\n  }, {\n    key: 'shake',\n    value: function shake(shouldShake) {\n      var LABEL_SHAKE = MDCFloatingLabelFoundation.cssClasses.LABEL_SHAKE;\n\n      if (shouldShake) {\n        this.adapter_.addClass(LABEL_SHAKE);\n      } else {\n        this.adapter_.removeClass(LABEL_SHAKE);\n      }\n    }\n\n    /**\n     * Styles the label to float or dock.\n     * @param {boolean} shouldFloat adds float class if true, otherwise remove\n     * float and shake class to dock label.\n     */\n\n  }, {\n    key: 'float',\n    value: function float(shouldFloat) {\n      var _MDCFloatingLabelFoun = MDCFloatingLabelFoundation.cssClasses,\n          LABEL_FLOAT_ABOVE = _MDCFloatingLabelFoun.LABEL_FLOAT_ABOVE,\n          LABEL_SHAKE = _MDCFloatingLabelFoun.LABEL_SHAKE;\n\n      if (shouldFloat) {\n        this.adapter_.addClass(LABEL_FLOAT_ABOVE);\n      } else {\n        this.adapter_.removeClass(LABEL_FLOAT_ABOVE);\n        this.adapter_.removeClass(LABEL_SHAKE);\n      }\n    }\n\n    /**\n     * Handles an interaction event on the root element.\n     */\n\n  }, {\n    key: 'handleShakeAnimationEnd_',\n    value: function handleShakeAnimationEnd_() {\n      var LABEL_SHAKE = MDCFloatingLabelFoundation.cssClasses.LABEL_SHAKE;\n\n      this.adapter_.removeClass(LABEL_SHAKE);\n    }\n  }]);\n\n  return MDCFloatingLabelFoundation;\n}(_foundation2.default);\n\nexports.default = MDCFloatingLabelFoundation;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _foundation = require('@material/base/foundation');\n\nvar _foundation2 = _interopRequireDefault(_foundation);\n\nvar _adapter = require('./adapter');\n\nvar _adapter2 = _interopRequireDefault(_adapter);\n\nvar _constants = require('./constants');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @license\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Copyright 2017 Google Inc. All Rights Reserved.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Licensed under the Apache License, Version 2.0 (the \"License\");\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * you may not use this file except in compliance with the License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * You may obtain a copy of the License at\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\nhttp://www.apache.org/licenses/LICENSE-2.0\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Unless required by applicable law or agreed to in writing, software\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * distributed under the License is distributed on an \"AS IS\" BASIS,\neither express or implied.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * See the License for the specific language governing permissions and\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * limitations under the License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n/**\n * @extends {MDCFoundation<!MDCNotchedOutlineAdapter>}\n * @final\n */\nvar MDCNotchedOutlineFoundation = function (_MDCFoundation) {\n  _inherits(MDCNotchedOutlineFoundation, _MDCFoundation);\n\n  _createClass(MDCNotchedOutlineFoundation, null, [{\n    key: 'strings',\n\n    /** @return enum {string} */\n    get: function get() {\n      return _constants.strings;\n    }\n\n    /** @return enum {string} */\n\n  }, {\n    key: 'cssClasses',\n    get: function get() {\n      return _constants.cssClasses;\n    }\n\n    /**\n     * {@see MDCNotchedOutlineAdapter} for typing information on parameters and return\n     * types.\n     * @return {!MDCNotchedOutlineAdapter}\n     */\n\n  }, {\n    key: 'defaultAdapter',\n    get: function get() {\n      return (/** @type {!MDCNotchedOutlineAdapter} */{\n          getWidth: function getWidth() {},\n          getHeight: function getHeight() {},\n          addClass: function addClass() {},\n          removeClass: function removeClass() {},\n          setOutlinePathAttr: function setOutlinePathAttr() {},\n          getIdleOutlineStyleValue: function getIdleOutlineStyleValue() {}\n        }\n      );\n    }\n\n    /**\n     * @param {!MDCNotchedOutlineAdapter} adapter\n     */\n\n  }]);\n\n  function MDCNotchedOutlineFoundation(adapter) {\n    _classCallCheck(this, MDCNotchedOutlineFoundation);\n\n    return _possibleConstructorReturn(this, (MDCNotchedOutlineFoundation.__proto__ || Object.getPrototypeOf(MDCNotchedOutlineFoundation)).call(this, Object.assign(MDCNotchedOutlineFoundation.defaultAdapter, adapter)));\n  }\n\n  /**\n   * Adds the outline notched selector and updates the notch width\n   * calculated based off of notchWidth and isRtl.\n   * @param {number} notchWidth\n   * @param {boolean=} isRtl\n   */\n\n\n  _createClass(MDCNotchedOutlineFoundation, [{\n    key: 'notch',\n    value: function notch(notchWidth) {\n      var isRtl = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      var OUTLINE_NOTCHED = MDCNotchedOutlineFoundation.cssClasses.OUTLINE_NOTCHED;\n\n      this.adapter_.addClass(OUTLINE_NOTCHED);\n      this.updateSvgPath_(notchWidth, isRtl);\n    }\n\n    /**\n     * Removes notched outline selector to close the notch in the outline.\n     */\n\n  }, {\n    key: 'closeNotch',\n    value: function closeNotch() {\n      var OUTLINE_NOTCHED = MDCNotchedOutlineFoundation.cssClasses.OUTLINE_NOTCHED;\n\n      this.adapter_.removeClass(OUTLINE_NOTCHED);\n    }\n\n    /**\n     * Updates the SVG path of the focus outline element based on the notchWidth\n     * and the RTL context.\n     * @param {number} notchWidth\n     * @param {boolean=} isRtl\n     * @private\n     */\n\n  }, {\n    key: 'updateSvgPath_',\n    value: function updateSvgPath_(notchWidth, isRtl) {\n      // Fall back to reading a specific corner's style because Firefox doesn't report the style on border-radius.\n      var radiusStyleValue = this.adapter_.getIdleOutlineStyleValue('border-radius') || this.adapter_.getIdleOutlineStyleValue('border-top-left-radius');\n      var radius = parseFloat(radiusStyleValue);\n      var width = this.adapter_.getWidth();\n      var height = this.adapter_.getHeight();\n      var cornerWidth = radius + 1.2;\n      var leadingStrokeLength = Math.abs(11 - cornerWidth);\n      var paddedNotchWidth = notchWidth + 8;\n\n      // The right, bottom, and left sides of the outline follow the same SVG path.\n      var pathMiddle = 'a' + radius + ',' + radius + ' 0 0 1 ' + radius + ',' + radius + 'v' + (height - 2 * cornerWidth) + 'a' + radius + ',' + radius + ' 0 0 1 ' + -radius + ',' + radius + 'h' + (-width + 2 * cornerWidth) + 'a' + radius + ',' + radius + ' 0 0 1 ' + -radius + ',' + -radius + 'v' + (-height + 2 * cornerWidth) + 'a' + radius + ',' + radius + ' 0 0 1 ' + radius + ',' + -radius;\n\n      var path = void 0;\n      if (!isRtl) {\n        path = 'M' + (cornerWidth + leadingStrokeLength + paddedNotchWidth) + ',' + 1 + 'h' + (width - 2 * cornerWidth - paddedNotchWidth - leadingStrokeLength) + pathMiddle + 'h' + leadingStrokeLength;\n      } else {\n        path = 'M' + (width - cornerWidth - leadingStrokeLength) + ',' + 1 + 'h' + leadingStrokeLength + pathMiddle + 'h' + (width - 2 * cornerWidth - paddedNotchWidth - leadingStrokeLength);\n      }\n\n      this.adapter_.setOutlinePathAttr(path);\n    }\n  }]);\n\n  return MDCNotchedOutlineFoundation;\n}(_foundation2.default);\n\nexports.default = MDCNotchedOutlineFoundation;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * Adapter for MDC TextField Line Ripple.\n *\n * Defines the shape of the adapter expected by the foundation. Implement this\n * adapter to integrate the line ripple into your framework. See\n * https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md\n * for more information.\n *\n * @record\n */\nvar MDCLineRippleAdapter = function () {\n  function MDCLineRippleAdapter() {\n    _classCallCheck(this, MDCLineRippleAdapter);\n  }\n\n  _createClass(MDCLineRippleAdapter, [{\n    key: \"addClass\",\n\n    /**\n     * Adds a class to the line ripple element.\n     * @param {string} className\n     */\n    value: function addClass(className) {}\n\n    /**\n     * Removes a class from the line ripple element.\n     * @param {string} className\n     */\n\n  }, {\n    key: \"removeClass\",\n    value: function removeClass(className) {}\n\n    /**\n     * @param {string} className\n     * @return {boolean}\n     */\n\n  }, {\n    key: \"hasClass\",\n    value: function hasClass(className) {}\n\n    /**\n     * Sets the style property with propertyName to value on the root element.\n     * @param {string} propertyName\n     * @param {string} value\n     */\n\n  }, {\n    key: \"setStyle\",\n    value: function setStyle(propertyName, value) {}\n\n    /**\n     * Registers an event listener on the line ripple element for a given event.\n     * @param {string} evtType\n     * @param {function(!Event): undefined} handler\n     */\n\n  }, {\n    key: \"registerEventHandler\",\n    value: function registerEventHandler(evtType, handler) {}\n\n    /**\n     * Deregisters an event listener on the line ripple element for a given event.\n     * @param {string} evtType\n     * @param {function(!Event): undefined} handler\n     */\n\n  }, {\n    key: \"deregisterEventHandler\",\n    value: function deregisterEventHandler(evtType, handler) {}\n  }]);\n\n  return MDCLineRippleAdapter;\n}();\n\nexports.default = MDCLineRippleAdapter;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _foundation = require('@material/base/foundation');\n\nvar _foundation2 = _interopRequireDefault(_foundation);\n\nvar _adapter = require('./adapter');\n\nvar _adapter2 = _interopRequireDefault(_adapter);\n\nvar _constants = require('./constants');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @license\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Copyright 2017 Google Inc. All Rights Reserved.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Licensed under the Apache License, Version 2.0 (the \"License\");\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * you may not use this file except in compliance with the License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * You may obtain a copy of the License at\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\nhttp://www.apache.org/licenses/LICENSE-2.0\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Unless required by applicable law or agreed to in writing, software\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * distributed under the License is distributed on an \"AS IS\" BASIS,\neither express or implied.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * See the License for the specific language governing permissions and\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * limitations under the License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n/**\n * @extends {MDCFoundation<!MDCTextFieldHelperTextAdapter>}\n * @final\n */\nvar MDCTextFieldHelperTextFoundation = function (_MDCFoundation) {\n  _inherits(MDCTextFieldHelperTextFoundation, _MDCFoundation);\n\n  _createClass(MDCTextFieldHelperTextFoundation, null, [{\n    key: 'cssClasses',\n\n    /** @return enum {string} */\n    get: function get() {\n      return _constants.cssClasses;\n    }\n\n    /** @return enum {string} */\n\n  }, {\n    key: 'strings',\n    get: function get() {\n      return _constants.strings;\n    }\n\n    /**\n     * {@see MDCTextFieldHelperTextAdapter} for typing information on parameters and return\n     * types.\n     * @return {!MDCTextFieldHelperTextAdapter}\n     */\n\n  }, {\n    key: 'defaultAdapter',\n    get: function get() {\n      return (/** @type {!MDCTextFieldHelperTextAdapter} */{\n          addClass: function addClass() {},\n          removeClass: function removeClass() {},\n          hasClass: function hasClass() {},\n          setAttr: function setAttr() {},\n          removeAttr: function removeAttr() {},\n          setContent: function setContent() {}\n        }\n      );\n    }\n\n    /**\n     * @param {!MDCTextFieldHelperTextAdapter} adapter\n     */\n\n  }]);\n\n  function MDCTextFieldHelperTextFoundation(adapter) {\n    _classCallCheck(this, MDCTextFieldHelperTextFoundation);\n\n    return _possibleConstructorReturn(this, (MDCTextFieldHelperTextFoundation.__proto__ || Object.getPrototypeOf(MDCTextFieldHelperTextFoundation)).call(this, Object.assign(MDCTextFieldHelperTextFoundation.defaultAdapter, adapter)));\n  }\n\n  /**\n   * Sets the content of the helper text field.\n   * @param {string} content\n   */\n\n\n  _createClass(MDCTextFieldHelperTextFoundation, [{\n    key: 'setContent',\n    value: function setContent(content) {\n      this.adapter_.setContent(content);\n    }\n\n    /** @param {boolean} isPersistent Sets the persistency of the helper text. */\n\n  }, {\n    key: 'setPersistent',\n    value: function setPersistent(isPersistent) {\n      if (isPersistent) {\n        this.adapter_.addClass(_constants.cssClasses.HELPER_TEXT_PERSISTENT);\n      } else {\n        this.adapter_.removeClass(_constants.cssClasses.HELPER_TEXT_PERSISTENT);\n      }\n    }\n\n    /**\n     * @param {boolean} isValidation True to make the helper text act as an\n     *   error validation message.\n     */\n\n  }, {\n    key: 'setValidation',\n    value: function setValidation(isValidation) {\n      if (isValidation) {\n        this.adapter_.addClass(_constants.cssClasses.HELPER_TEXT_VALIDATION_MSG);\n      } else {\n        this.adapter_.removeClass(_constants.cssClasses.HELPER_TEXT_VALIDATION_MSG);\n      }\n    }\n\n    /** Makes the helper text visible to the screen reader. */\n\n  }, {\n    key: 'showToScreenReader',\n    value: function showToScreenReader() {\n      this.adapter_.removeAttr(_constants.strings.ARIA_HIDDEN);\n    }\n\n    /**\n     * Sets the validity of the helper text based on the input validity.\n     * @param {boolean} inputIsValid\n     */\n\n  }, {\n    key: 'setValidity',\n    value: function setValidity(inputIsValid) {\n      var helperTextIsPersistent = this.adapter_.hasClass(_constants.cssClasses.HELPER_TEXT_PERSISTENT);\n      var helperTextIsValidationMsg = this.adapter_.hasClass(_constants.cssClasses.HELPER_TEXT_VALIDATION_MSG);\n      var validationMsgNeedsDisplay = helperTextIsValidationMsg && !inputIsValid;\n\n      if (validationMsgNeedsDisplay) {\n        this.adapter_.setAttr(_constants.strings.ROLE, 'alert');\n      } else {\n        this.adapter_.removeAttr(_constants.strings.ROLE);\n      }\n\n      if (!helperTextIsPersistent && !validationMsgNeedsDisplay) {\n        this.hide_();\n      }\n    }\n\n    /**\n     * Hides the help text from screen readers.\n     * @private\n     */\n\n  }, {\n    key: 'hide_',\n    value: function hide_() {\n      this.adapter_.setAttr(_constants.strings.ARIA_HIDDEN, 'true');\n    }\n  }]);\n\n  return MDCTextFieldHelperTextFoundation;\n}(_foundation2.default);\n\nexports.default = MDCTextFieldHelperTextFoundation;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MDCTextFieldIconFoundation = exports.MDCTextFieldIcon = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _component = require('@material/base/component');\n\nvar _component2 = _interopRequireDefault(_component);\n\nvar _adapter = require('./adapter');\n\nvar _adapter2 = _interopRequireDefault(_adapter);\n\nvar _foundation = require('./foundation');\n\nvar _foundation2 = _interopRequireDefault(_foundation);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @license\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Copyright 2017 Google Inc. All Rights Reserved.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Licensed under the Apache License, Version 2.0 (the \"License\");\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * you may not use this file except in compliance with the License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * You may obtain a copy of the License at\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\nhttp://www.apache.org/licenses/LICENSE-2.0\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Unless required by applicable law or agreed to in writing, software\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * distributed under the License is distributed on an \"AS IS\" BASIS,\neither express or implied.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * See the License for the specific language governing permissions and\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * limitations under the License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n/**\n * @extends {MDCComponent<!MDCTextFieldIconFoundation>}\n * @final\n */\nvar MDCTextFieldIcon = function (_MDCComponent) {\n  _inherits(MDCTextFieldIcon, _MDCComponent);\n\n  function MDCTextFieldIcon() {\n    _classCallCheck(this, MDCTextFieldIcon);\n\n    return _possibleConstructorReturn(this, (MDCTextFieldIcon.__proto__ || Object.getPrototypeOf(MDCTextFieldIcon)).apply(this, arguments));\n  }\n\n  _createClass(MDCTextFieldIcon, [{\n    key: 'getDefaultFoundation',\n\n\n    /**\n     * @return {!MDCTextFieldIconFoundation}\n     */\n    value: function getDefaultFoundation() {\n      var _this2 = this;\n\n      return new _foundation2.default( /** @type {!MDCTextFieldIconAdapter} */Object.assign({\n        getAttr: function getAttr(attr) {\n          return _this2.root_.getAttribute(attr);\n        },\n        setAttr: function setAttr(attr, value) {\n          return _this2.root_.setAttribute(attr, value);\n        },\n        removeAttr: function removeAttr(attr) {\n          return _this2.root_.removeAttribute(attr);\n        },\n        setContent: function setContent(content) {\n          _this2.root_.textContent = content;\n        },\n        registerInteractionHandler: function registerInteractionHandler(evtType, handler) {\n          return _this2.root_.addEventListener(evtType, handler);\n        },\n        deregisterInteractionHandler: function deregisterInteractionHandler(evtType, handler) {\n          return _this2.root_.removeEventListener(evtType, handler);\n        },\n        notifyIconAction: function notifyIconAction() {\n          return _this2.emit(_foundation2.default.strings.ICON_EVENT, {} /* evtData */, true /* shouldBubble */);\n        }\n      }));\n    }\n  }, {\n    key: 'foundation',\n\n\n    /**\n     * @return {!MDCTextFieldIconFoundation}\n     */\n    get: function get() {\n      return this.foundation_;\n    }\n  }], [{\n    key: 'attachTo',\n\n    /**\n     * @param {!Element} root\n     * @return {!MDCTextFieldIcon}\n     */\n    value: function attachTo(root) {\n      return new MDCTextFieldIcon(root);\n    }\n  }]);\n\n  return MDCTextFieldIcon;\n}(_component2.default);\n\nexports.MDCTextFieldIcon = MDCTextFieldIcon;\nexports.MDCTextFieldIconFoundation = _foundation2.default;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _foundation = require('@material/base/foundation');\n\nvar _foundation2 = _interopRequireDefault(_foundation);\n\nvar _adapter = require('./adapter');\n\nvar _adapter2 = _interopRequireDefault(_adapter);\n\nvar _constants = require('./constants');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @license\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Copyright 2018 Google Inc. All Rights Reserved.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Licensed under the Apache License, Version 2.0 (the \"License\");\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * you may not use this file except in compliance with the License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * You may obtain a copy of the License at\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\nhttp://www.apache.org/licenses/LICENSE-2.0\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Unless required by applicable law or agreed to in writing, software\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * distributed under the License is distributed on an \"AS IS\" BASIS,\neither express or implied.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * See the License for the specific language governing permissions and\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * limitations under the License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n/**\n * @extends {MDCFoundation<!MDCLineRippleAdapter>}\n * @final\n */\nvar MDCLineRippleFoundation = function (_MDCFoundation) {\n  _inherits(MDCLineRippleFoundation, _MDCFoundation);\n\n  _createClass(MDCLineRippleFoundation, null, [{\n    key: 'cssClasses',\n\n    /** @return enum {string} */\n    get: function get() {\n      return _constants.cssClasses;\n    }\n\n    /**\n     * {@see MDCLineRippleAdapter} for typing information on parameters and return\n     * types.\n     * @return {!MDCLineRippleAdapter}\n     */\n\n  }, {\n    key: 'defaultAdapter',\n    get: function get() {\n      return (/** @type {!MDCLineRippleAdapter} */{\n          addClass: function addClass() {},\n          removeClass: function removeClass() {},\n          hasClass: function hasClass() {},\n          setStyle: function setStyle() {},\n          registerEventHandler: function registerEventHandler() {},\n          deregisterEventHandler: function deregisterEventHandler() {}\n        }\n      );\n    }\n\n    /**\n     * @param {!MDCLineRippleAdapter=} adapter\n     */\n\n  }]);\n\n  function MDCLineRippleFoundation() {\n    var adapter = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : /** @type {!MDCLineRippleAdapter} */{};\n\n    _classCallCheck(this, MDCLineRippleFoundation);\n\n    /** @private {function(!Event): undefined} */\n    var _this = _possibleConstructorReturn(this, (MDCLineRippleFoundation.__proto__ || Object.getPrototypeOf(MDCLineRippleFoundation)).call(this, Object.assign(MDCLineRippleFoundation.defaultAdapter, adapter)));\n\n    _this.transitionEndHandler_ = function (evt) {\n      return _this.handleTransitionEnd(evt);\n    };\n    return _this;\n  }\n\n  _createClass(MDCLineRippleFoundation, [{\n    key: 'init',\n    value: function init() {\n      this.adapter_.registerEventHandler('transitionend', this.transitionEndHandler_);\n    }\n  }, {\n    key: 'destroy',\n    value: function destroy() {\n      this.adapter_.deregisterEventHandler('transitionend', this.transitionEndHandler_);\n    }\n\n    /**\n     * Activates the line ripple\n     */\n\n  }, {\n    key: 'activate',\n    value: function activate() {\n      this.adapter_.removeClass(_constants.cssClasses.LINE_RIPPLE_DEACTIVATING);\n      this.adapter_.addClass(_constants.cssClasses.LINE_RIPPLE_ACTIVE);\n    }\n\n    /**\n     * Sets the center of the ripple animation to the given X coordinate.\n     * @param {number} xCoordinate\n     */\n\n  }, {\n    key: 'setRippleCenter',\n    value: function setRippleCenter(xCoordinate) {\n      this.adapter_.setStyle('transform-origin', xCoordinate + 'px center');\n    }\n\n    /**\n     * Deactivates the line ripple\n     */\n\n  }, {\n    key: 'deactivate',\n    value: function deactivate() {\n      this.adapter_.addClass(_constants.cssClasses.LINE_RIPPLE_DEACTIVATING);\n    }\n\n    /**\n     * Handles a transition end event\n     * @param {!Event} evt\n     */\n\n  }, {\n    key: 'handleTransitionEnd',\n    value: function handleTransitionEnd(evt) {\n      // Wait for the line ripple to be either transparent or opaque\n      // before emitting the animation end event\n      var isDeactivating = this.adapter_.hasClass(_constants.cssClasses.LINE_RIPPLE_DEACTIVATING);\n\n      if (evt.propertyName === 'opacity') {\n        if (isDeactivating) {\n          this.adapter_.removeClass(_constants.cssClasses.LINE_RIPPLE_ACTIVE);\n          this.adapter_.removeClass(_constants.cssClasses.LINE_RIPPLE_DEACTIVATING);\n        }\n      }\n    }\n  }]);\n\n  return MDCLineRippleFoundation;\n}(_foundation2.default);\n\nexports.default = MDCLineRippleFoundation;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * Adapter for MDC Text Field Helper Text.\n *\n * Defines the shape of the adapter expected by the foundation. Implement this\n * adapter to integrate the TextField helper text into your framework. See\n * https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md\n * for more information.\n *\n * @record\n */\nvar MDCTextFieldHelperTextAdapter = function () {\n  function MDCTextFieldHelperTextAdapter() {\n    _classCallCheck(this, MDCTextFieldHelperTextAdapter);\n  }\n\n  _createClass(MDCTextFieldHelperTextAdapter, [{\n    key: \"addClass\",\n\n    /**\n     * Adds a class to the helper text element.\n     * @param {string} className\n     */\n    value: function addClass(className) {}\n\n    /**\n     * Removes a class from the helper text element.\n     * @param {string} className\n     */\n\n  }, {\n    key: \"removeClass\",\n    value: function removeClass(className) {}\n\n    /**\n     * Returns whether or not the helper text element contains the given class.\n     * @param {string} className\n     * @return {boolean}\n     */\n\n  }, {\n    key: \"hasClass\",\n    value: function hasClass(className) {}\n\n    /**\n     * Sets an attribute with a given value on the helper text element.\n     * @param {string} attr\n     * @param {string} value\n     */\n\n  }, {\n    key: \"setAttr\",\n    value: function setAttr(attr, value) {}\n\n    /**\n     * Removes an attribute from the helper text element.\n     * @param {string} attr\n     */\n\n  }, {\n    key: \"removeAttr\",\n    value: function removeAttr(attr) {}\n\n    /**\n     * Sets the text content for the helper text element.\n     * @param {string} content\n     */\n\n  }, {\n    key: \"setContent\",\n    value: function setContent(content) {}\n  }]);\n\n  return MDCTextFieldHelperTextAdapter;\n}();\n\nexports.default = MDCTextFieldHelperTextAdapter;"],"mappings":"AAEA;;;;;;;;;;;;;;;;;AAsDA;;;;;;;;;;;;;;;;;ACjBA;;;;;;;;;;;;;;;;;ACkCA;;;;;;;;;;;;;;;;;AClCA;;;;;;;;;;;;;;;;ACVA;;;;;;;;;;;;;;;;;ACqBA;;;;;;;;;;;;;;;;;ACLA;;;;;;;;;;;;;;;;;ACGA;;;;;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;;;;;ACTA;;;;;;;;;;;;;;;;;ACMA;;;;;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;;;;;ACNA;;;;;;;;;;;;;;;;;ACMA;;;;;;;;;;;;;;;;;ACGA;;;;;;;;;;;;;;;;;ACHA;;;;;;;;;;;;;;;;;ACNA","sourceRoot":""}